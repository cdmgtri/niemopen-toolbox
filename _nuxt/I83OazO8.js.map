{"version":3,"file":"I83OazO8.js","sources":["../../../../components/content/ContentNamespace.vue"],"sourcesContent":["\r\n<template>\r\n  <EntityContents :as=\"as\" :entity=\"namespace\">\r\n\r\n    <template #properties>\r\n      <ListProperties :properties=\"properties\" :enable-more=\"enableMoreProperties\" @load-more=\"loadMoreProperties\"/>\r\n    </template>\r\n\r\n    <template #types>\r\n      <ListTypes :types=\"types\" :enable-more=\"enableMoreTypes\" @load-more=\"loadMoreTypes\"/>\r\n    </template>\r\n\r\n  </EntityContents>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport type { Namespace } from '~/utils/niem/Namespace';\r\nimport type { Property } from '~/utils/niem/Property';\r\nimport type { Type } from '~/utils/niem/Type';\r\n\r\nconst { namespace } = defineProps<{\r\n  namespace: Namespace,\r\n  as: ContentsAsType }>();\r\n\r\ntype Params = APINamespaceParams & {\r\n  slug: string\r\n}\r\n\r\nconst params = useRoute().params as Params;\r\nparams.prefix = params.slug;\r\n\r\nconst toolbox = useToolboxStore();\r\n\r\nconst properties: Ref<Property[]> = ref([]);\r\nconst types: Ref<Type[]> = ref([]);\r\n\r\nconst enableMoreProperties = computed<boolean>(() => {\r\n  return !namespace.propertiesLoaded;\r\n})\r\n\r\nconst enableMoreTypes = computed<boolean>(() => {\r\n  return !namespace.typesLoaded;\r\n});\r\n\r\nnamespace.propertiesCount = 0;\r\nnamespace.typesCount = 0;\r\n\r\n// Initial load\r\nawait loadMoreProperties();\r\nawait loadMoreTypes();\r\n\r\nasync function loadMoreProperties() {\r\n  if (namespace.propertiesLoaded) return;\r\n  if (!namespace.propertiesCount) namespace.propertiesCount = 0;\r\n\r\n  let results = await toolbox.propertiesFromNamespace(namespace, properties.value.length);\r\n  if (results.length < API.PAGINATION_LIMIT) {\r\n    namespace.propertiesLoaded = true;\r\n  }\r\n  namespace.propertiesCount += results.length;\r\n  properties.value.push(...results);\r\n}\r\n\r\nasync function loadMoreTypes() {\r\n  if (namespace.typesLoaded) return;\r\n  if (!namespace.typesCount) namespace.typesCount = 0;\r\n\r\n  let results = await toolbox.typesFromNamespace(namespace, types.value.length);\r\n  if (results.length < API.PAGINATION_LIMIT) {\r\n    namespace.typesLoaded = true;\r\n  }\r\n  namespace.typesCount += results.length;\r\n  types.value.push(...results);\r\n}\r\n\r\n</script>\r\n"],"names":["params","useRoute","toolbox","useToolboxStore","properties","ref","types","enableMoreProperties","computed","__props","enableMoreTypes","__temp","__restore","_withAsyncContext","loadMoreProperties","loadMoreTypes","results","API"],"mappings":"kWA4BM,MAAAA,EAASC,IAAW,OAC1BD,EAAO,OAASA,EAAO,KAEvB,MAAME,EAAUC,EAAgB,EAE1BC,EAA8BC,EAAI,EAAE,EACpCC,EAAqBD,EAAI,EAAE,EAE3BE,EAAuBC,EAAkB,IACtC,CAACC,EAAS,UAAC,gBACnB,EAEKC,EAAkBF,EAAkB,IACjC,CAACC,EAAS,UAAC,WACnB,EAEDA,EAAS,UAAC,gBAAkB,EAC5BA,EAAA,UAAU,WAAa,EAGvB,CAAAE,EAAAC,CAAA,EAAAC,EAAA,IAAMC,GAAmB,cACzB,CAAAH,EAAAC,CAAA,EAAAC,EAAA,IAAME,GAAc,cAEpB,eAAeD,GAAqB,CAC9B,GAAAL,EAAA,UAAU,iBAAkB,OAC3BA,EAAA,UAAU,kBAAiBA,EAAA,UAAU,gBAAkB,GAExD,IAAAO,EAAU,MAAMd,EAAQ,wBAAwBO,EAAS,UAAEL,EAAW,MAAM,MAAM,EAClFY,EAAQ,OAASC,EAAI,mBACvBR,EAAA,UAAU,iBAAmB,IAEtBA,EAAA,UAAC,iBAAmBO,EAAQ,OAC1BZ,EAAA,MAAM,KAAK,GAAGY,CAAO,CAAA,CAGlC,eAAeD,GAAgB,CACzB,GAAAN,EAAS,UAAC,YAAa,OACtBA,EAAS,UAAC,aAAYA,YAAU,WAAa,GAE9C,IAAAO,EAAU,MAAMd,EAAQ,mBAAmBO,EAAS,UAAEH,EAAM,MAAM,MAAM,EACxEU,EAAQ,OAASC,EAAI,mBACvBR,EAAA,UAAU,YAAc,IAE1BA,EAAA,UAAU,YAAcO,EAAQ,OAC1BV,EAAA,MAAM,KAAK,GAAGU,CAAO,CAAA"}