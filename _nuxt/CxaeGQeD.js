import{_ as Z}from"./BRXFmSYo.js";import{_ as Q,b as Y}from"./D5YiijYX.js";import{_ as ee,a as oe,b as le}from"./D5M2G_Rh.js";import{_ as ne,a as te,b as ae}from"./UQDTExFp.js";import{e as se,r as w,q as b,s as ie,v as re,x as me,o as T,c as S,b as t,w as a,h as l,F as ue,a as i,d as r,y as pe,j as D,l as fe}from"./B4LEY2OC.js";import{_ as de}from"./V5w1dLgF.js";import{_ as s,A as $}from"./DsPweMlB.js";import{A as I,a as f,T as ce,_ as g}from"./B7lAAY5O.js";import"./DnOhiAXk.js";import"./6bm_RRcn.js";import"./CgmagM3f.js";import"./wVOZ42FT.js";import"./CcQyslrq.js";import"./Qy7vSWk7.js";import"./CKRfikd8.js";import"./C0e8eNHv.js";import"./Cpj98o6Y.js";const ve={key:0},be={key:1},qe=se({__name:"transform",setup(Ie){const m=w("upload"),A=[{value:"upload",label:"Upload",icon:s.upload},{type:"separator"},{label:"Valid examples",type:"label"},{value:"cmf",label:"CMF",icon:s.cmf,from:"cmf",path:"demo/transform/CrashDriver-5.0.cmf.xml"},{value:"xsd",label:"XSD",icon:s.xml,from:"xsd",path:"demo/transform/CrashDriver-5.0.zip"},{type:"separator"},{label:"Invalid examples",type:"label"},{value:"cmf-invalid",label:"CMF 0.6",icon:s.error,from:"cmf",path:"demo/transform/CrashDriver-5.0-CMFv0.6.cmf.xml"},{value:"text",label:".txt file",icon:s.error,from:void 0,path:"demo/transform/CrashDriver-5.0.txt"}],F=b(()=>A.find(o=>o.value==m.value)),_=w();ie(m,async(o,e)=>{var u,v;F.value&&m.value!="upload"?(n.file=await f.loadPublicFile(F.value.path),_.value=(u=n.file)==null?void 0:u.name,n.from=(v=F.value)==null?void 0:v.from):(n.file=void 0,n.from=void 0),M.value.clear(),c.request="unsent"});const n=re({}),x=[{value:"cmf",label:"CMF XML",icon:s.cmf,extensions:["cmf","xml"]},{value:"xsd",label:"NIEM XSD",icon:s.xml,extensions:["zip","xsd"]}],R=[...x,{value:"json_schema",label:"JSON Schema",icon:s.json,extensions:["schema.json","jschema","json"]},{value:"owl",label:"OWL",icon:s.owl,extensions:["ttl"]}],E=b(()=>x.find(o=>o.value==n.from)),h=b(()=>R.find(o=>o.value===n.to)),P=b(()=>{var o;return ce.extension((o=n.file)==null?void 0:o.name)}),k=x.flatMap(o=>o.extensions),N=k.map(o=>"."+o).join(", ");async function X(o){C.value="",n.file=f.fileInput(o),n.from=j(),c.request="unsent",await M.value.validate({name:"",silent:!0})}function j(){switch(P.value){case"cmf":case"xml":case"cmf.xml":return"cmf";case"xsd":case"zip":return"xsd";default:return}}const z=b(()=>{var o;return`curl -i -X POST -H "Content-Type: multipart/form-data" -F from=${n.from} -F to=${n.to} -F file=@${(o=n.file)==null?void 0:o.name} ${I.routes.transform}`}),M=me("form"),C=w();let y=!1;function B(o){const e=f.initFormErrors();return C.value=void 0,y&&(f.validateRequiredField(e,"from",o.from),f.validateRequiredField(e,"to",o.to),f.validateRequiredField(e,"file",o.file),f.validateFileExtension(e,"file",k,P.value)),e}const c=I.initResults();async function L(){var u;if(y=!0,await((u=M.value)==null?void 0:u.validate({name:"",silent:!0}))==!1){y=!1;return}const e=await I.post(I.routes.transform,n,c);await I.downloadFileResults(e,c),y=!1}return(o,e)=>{const u=Z,v=Y,O=oe,G=Q,q=ne,U=te,V=ae,H=fe,W=le,J=de,K=ee;return T(),S(ue,null,[t(G,{page:("AppItems"in o?o.AppItems:l($)).transform},{user:a(()=>[e[11]||(e[11]=i("p",null," Transform a NIEM subset, schema, IEPD schemas, or message model in either CMF or NIEM XML Schema to another supported format. ",-1)),i("p",null,[e[6]||(e[6]=r(" This functionality leverages the ")),t(u,{link:("AppItems"in o?o.AppItems:l($)).cmfToolRepo},null,8,["link"]),e[7]||(e[7]=r()),t(v,null,{default:a(()=>e[4]||(e[4]=[r("version 0.7-alpha.6")])),_:1}),e[8]||(e[8]=r(" which supports ")),t(u,{link:("AppItems"in o?o.AppItems:l($)).cmfRepo},null,8,["link"]),e[9]||(e[9]=r()),t(v,null,{default:a(()=>e[5]||(e[5]=[r("version 0.8")])),_:1}),e[10]||(e[10]=r(". "))]),e[12]||(e[12]=i("p",{class:"font-medium"},"Tips:",-1)),e[13]||(e[13]=i("ul",{class:"bullets"},[i("li",null," CMF inputs have to be the version supported by this tool. "),i("li",null," CMF version migration is not automated and must be done by hand. "),i("li",null," NIEM XSD inputs can be a single schema as a XSD file or multiple schemas in a zip file. "),i("li",null," Validation or conformance errors may lead to transform failure. ")],-1)),e[14]||(e[14]=i("br",null,null,-1))]),developer:a(()=>[t(O,{title:"POST request",code:l(z)},null,8,["code"])]),_:1},8,["page"]),t(J,null,{default:a(()=>[t(W,{ref_key:"form",ref:M,state:l(n),validate:B,"validate-on":["change"],onSubmit:pe(L,["prevent"]),enctype:"multipart/form-data"},{default:a(()=>[t(V,{name:"file",required:"",error:l(C),label:"1. Select a model input file",help:("ToolboxForm"in o?o.ToolboxForm:l(f)).fileWarning(l(m)=="upload")},{default:a(()=>{var p;return[l(m)=="upload"?(T(),S("span",ve,[t(q,{type:"file",onChange:X,accept:l(N),icon:("icons"in o?o.icons:l(s)).upload,ui:("UI"in o?o.UI:l(g)).inputFileInGroup},{trailing:a(()=>e[15]||(e[15]=[r("(CMF | XSD | ZIP)")])),_:1},8,["accept","icon","ui"])])):(T(),S("span",be,[t(q,{modelValue:l(_),"onUpdate:modelValue":e[0]||(e[0]=d=>D(_)?_.value=d:null),ui:("UI"in o?o.UI:l(g)).inputFileInGroup,icon:("icons"in o?o.icons:l(s)).magic},null,8,["modelValue","ui","icon"])])),t(U,{modelValue:l(m),"onUpdate:modelValue":e[1]||(e[1]=d=>D(m)?m.value=d:null),items:A,color:"neutral",variant:"subtle",ui:("UI"in o?o.UI:l(g)).inputMode,icon:(p=l(F))==null?void 0:p.icon},null,8,["modelValue","ui","icon"])]}),_:1},8,["error","help"]),t(V,{name:"from",required:"",label:"2. Select input file format"},{default:a(()=>{var p;return[t(U,{modelValue:l(n).from,"onUpdate:modelValue":e[2]||(e[2]=d=>l(n).from=d),items:x,icon:(p=l(E))==null?void 0:p.icon,class:"w-64"},null,8,["modelValue","icon"])]}),_:1}),t(V,{name:"to",required:"",label:"3. Select transformation format"},{default:a(()=>{var p;return[t(U,{modelValue:l(n).to,"onUpdate:modelValue":e[3]||(e[3]=d=>l(n).to=d),items:R,icon:(p=l(h))==null?void 0:p.icon,class:"w-64"},null,8,["modelValue","icon"])]}),_:1}),t(H,{type:"submit"},{default:a(()=>e[16]||(e[16]=[r("Transform")])),_:1})]),_:1},8,["state"])]),_:1}),t(K,{results:l(c)},null,8,["results"])],64)}}});export{qe as default};
//# sourceMappingURL=CxaeGQeD.js.map
