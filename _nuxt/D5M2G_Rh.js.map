{"version":3,"file":"D5M2G_Rh.js","sources":["../../../../components/toolbox/ToolboxCodePanel.vue","../../../../node_modules/@nuxt/ui/dist/runtime/utils/form.js","../../../../node_modules/@nuxt/ui/dist/runtime/types/form.js","../../../ui/form.ts","../../../../node_modules/@nuxt/ui/dist/runtime/components/Form.vue","../../../../components/toolbox/ToolboxIcon.vue","../../../../components/toolbox/ToolboxBadgeStatus.vue","../../../../components/apiResponse/APIResponseReportNDRTest.vue","../../../../components/toolbox/ToolboxButtonRowExpand.vue","../../../../components/apiResponse/APIResponseReportNDR.vue","../../../../components/apiResponse/APIResponseReportDefault.vue","../../../../components/toolbox/ToolboxCard.vue","../../../../components/apiResponse/APIResponsePanel.vue"],"sourcesContent":["\n<template>\n  <UCard :ui=\"cardUI\" class=\"mb-2 -ml-5\">\n    <template #header>\n      <ToolboxCopy :title=\"title\" :text=\"code\"/>\n    </template>\n\n    <pre class=\"whitespace-pre-wrap\"><code>{{ code }}</code></pre>\n\n    <template #footer>\n      Fill out fields in the form below to see a request.\n    </template>\n  </UCard>\n</template>\n\n<script setup lang=\"ts\">\n\nconst { color=\"neutral\" } = defineProps<{\n  code: string,\n  title?: string\n  color?: string\n}>();\n\nconst cardUI = {\n  root: `ring ring-inset ring-[var(--ui-${color})]/25 mt-[var(--app-vertical-spacer)] p-0 `,\n  header: `p-2 px-8 text-sm font-medium text-[var(--ui-text-muted)]`,\n  body: \"p-2 px-8 bg-gray-600 text-white\",\n  footer: \"p-2 px-8 text-sm font-light\"\n}\n\n</script>\n","export function isYupSchema(schema) {\n  return schema.validate && schema.__isYupSchema__;\n}\nexport function isYupError(error) {\n  return error.inner !== void 0;\n}\nexport function isSuperStructSchema(schema) {\n  return \"schema\" in schema && typeof schema.coercer === \"function\" && typeof schema.validator === \"function\" && typeof schema.refiner === \"function\";\n}\nexport function isZodSchema(schema) {\n  return schema.parse !== void 0;\n}\nexport function isJoiSchema(schema) {\n  return schema.validateAsync !== void 0 && schema.id !== void 0;\n}\nexport function isJoiError(error) {\n  return error.isJoi === true;\n}\nexport function isValibotSchema(schema) {\n  return \"_run\" in schema || typeof schema === \"function\" && \"schema\" in schema;\n}\nexport function isStandardSchema(schema) {\n  return \"~standard\" in schema;\n}\nexport async function validateStandarSchema(state, schema) {\n  const result = await schema[\"~standard\"].validate({\n    value: state\n  });\n  if (result.issues) {\n    return {\n      errors: result.issues?.map((issue) => ({\n        name: issue.path?.map((item) => typeof item === \"object\" ? item.key : item).join(\".\") || \"\",\n        message: issue.message\n      })) || [],\n      result: null\n    };\n  }\n  return {\n    errors: null,\n    result: result.value\n  };\n}\nasync function validateYupSchema(state, schema) {\n  try {\n    const result = await schema.validate(state, { abortEarly: false });\n    return {\n      errors: null,\n      result\n    };\n  } catch (error) {\n    if (isYupError(error)) {\n      const errors = error.inner.map((issue) => ({\n        name: issue.path ?? \"\",\n        message: issue.message\n      }));\n      return {\n        errors,\n        result: null\n      };\n    } else {\n      throw error;\n    }\n  }\n}\nasync function validateSuperstructSchema(state, schema) {\n  const [err, result] = schema.validate(state);\n  if (err) {\n    const errors = err.failures().map((error) => ({\n      message: error.message,\n      name: error.path.join(\".\")\n    }));\n    return {\n      errors,\n      result: null\n    };\n  }\n  return {\n    errors: null,\n    result\n  };\n}\nasync function validateZodSchema(state, schema) {\n  const result = await schema.safeParseAsync(state);\n  if (result.success === false) {\n    const errors = result.error.issues.map((issue) => ({\n      name: issue.path.join(\".\"),\n      message: issue.message\n    }));\n    return {\n      errors,\n      result: null\n    };\n  }\n  return {\n    result: result.data,\n    errors: null\n  };\n}\nasync function validateJoiSchema(state, schema) {\n  try {\n    const result = await schema.validateAsync(state, { abortEarly: false });\n    return {\n      errors: null,\n      result\n    };\n  } catch (error) {\n    if (isJoiError(error)) {\n      const errors = error.details.map((issue) => ({\n        name: issue.path.join(\".\"),\n        message: issue.message\n      }));\n      return {\n        errors,\n        result: null\n      };\n    } else {\n      throw error;\n    }\n  }\n}\nasync function validateValibotSchema(state, schema) {\n  const result = await (\"_run\" in schema ? schema._run({ typed: false, value: state }, {}) : schema(state));\n  if (!result.issues || result.issues.length === 0) {\n    const output = \"output\" in result ? result.output : \"value\" in result ? result.value : null;\n    return {\n      errors: null,\n      result: output\n    };\n  }\n  const errors = result.issues.map((issue) => ({\n    name: issue.path?.map((item) => item.key).join(\".\") || \"\",\n    message: issue.message\n  }));\n  return {\n    errors,\n    result: null\n  };\n}\nexport function parseSchema(state, schema) {\n  if (isZodSchema(schema)) {\n    return validateZodSchema(state, schema);\n  } else if (isJoiSchema(schema)) {\n    return validateJoiSchema(state, schema);\n  } else if (isValibotSchema(schema)) {\n    return validateValibotSchema(state, schema);\n  } else if (isYupSchema(schema)) {\n    return validateYupSchema(state, schema);\n  } else if (isSuperStructSchema(schema)) {\n    return validateSuperstructSchema(state, schema);\n  } else if (isStandardSchema(schema)) {\n    return validateStandarSchema(state, schema);\n  } else {\n    throw new Error(\"Form validation failed: Unsupported form schema\");\n  }\n}\n","export class FormValidationException extends Error {\n  formId;\n  errors;\n  childrens;\n  constructor(formId, errors, childErrors) {\n    super(\"Form validation exception\");\n    this.formId = formId;\n    this.errors = errors;\n    this.childrens = childErrors;\n    Object.setPrototypeOf(this, FormValidationException.prototype);\n  }\n}\n","export default {\n  \"base\": \"\"\n}","<script lang=\"ts\">\nimport { tv } from 'tailwind-variants'\nimport type { AppConfig } from '@nuxt/schema'\nimport _appConfig from '#build/app.config'\nimport theme from '#build/ui/form'\nimport { extendDevtoolsMeta } from '../composables/extendDevtoolsMeta'\nimport type { FormSchema, FormError, FormInputEvents, FormErrorEvent, FormSubmitEvent, FormEvent, Form, FormErrorWithId } from '../types/form'\n\nconst appConfig = _appConfig as AppConfig & { ui: { form: Partial<typeof theme> } }\n\nconst form = tv({ extend: tv(theme), ...(appConfig.ui?.form || {}) })\n\nexport interface FormProps<T extends object> {\n  id?: string | number\n  schema?: FormSchema<T>\n  state: Partial<T>\n  validate?: (state: Partial<T>) => Promise<FormError[]> | FormError[]\n  validateOn?: FormInputEvents[]\n  disabled?: boolean\n  validateOnInputDelay?: number\n  class?: any\n  onSubmit?: ((event: FormSubmitEvent<T>) => void | Promise<void>) | (() => void | Promise<void>)\n}\n\nexport interface FormEmits<T extends object> {\n  (e: 'submit', payload: FormSubmitEvent<T>): void\n  (e: 'error', payload: FormErrorEvent): void\n}\n\nexport interface FormSlots {\n  default(props?: {}): any\n}\n\nextendDevtoolsMeta({ example: 'FormExample' })\n</script>\n\n<script lang=\"ts\" setup generic=\"T extends object\">\nimport { provide, inject, nextTick, ref, onUnmounted, onMounted, computed, useId, readonly } from 'vue'\nimport { useEventBus } from '@vueuse/core'\nimport { formOptionsInjectionKey, formInputsInjectionKey, formBusInjectionKey, formLoadingInjectionKey } from '../composables/useFormField'\nimport { parseSchema } from '../utils/form'\nimport { FormValidationException } from '../types/form'\n\nconst props = withDefaults(defineProps<FormProps<T>>(), {\n  validateOn() {\n    return ['input', 'blur', 'change'] as FormInputEvents[]\n  },\n  validateOnInputDelay: 300\n})\nconst emits = defineEmits<FormEmits<T>>()\ndefineSlots<FormSlots>()\n\nconst formId = props.id ?? useId() as string\n\nconst bus = useEventBus<FormEvent>(`form-${formId}`)\nconst parentBus = inject(\n  formBusInjectionKey,\n  undefined\n)\n\nprovide(formBusInjectionKey, bus)\n\nconst nestedForms = ref<Map<string | number, { validate: () => any }>>(new Map())\n\nonMounted(async () => {\n  bus.on(async (event) => {\n    if (event.type === 'attach') {\n      nestedForms.value.set(event.formId, { validate: event.validate })\n    } else if (event.type === 'detach') {\n      nestedForms.value.delete(event.formId)\n    } else if (props.validateOn?.includes(event.type as FormInputEvents)) {\n      await _validate({ name: event.name, silent: true, nested: false })\n    }\n  })\n})\n\nonUnmounted(() => {\n  bus.reset()\n})\n\nonMounted(async () => {\n  if (parentBus) {\n    await nextTick()\n    parentBus.emit({ type: 'attach', validate: _validate, formId })\n  }\n})\n\nonUnmounted(() => {\n  if (parentBus) {\n    parentBus.emit({ type: 'detach', formId })\n  }\n})\n\nconst errors = ref<FormErrorWithId[]>([])\nprovide('form-errors', errors)\n\nconst inputs = ref<Record<string, { id?: string, pattern?: RegExp }>>({})\nprovide(formInputsInjectionKey, inputs)\n\nfunction resolveErrorIds(errs: FormError[]): FormErrorWithId[] {\n  return errs.map(err => ({\n    ...err,\n    id: inputs.value[err.name]?.id\n  }))\n}\n\nconst parsedValue = ref<T | null>(null)\nasync function getErrors(): Promise<FormErrorWithId[]> {\n  let errs = props.validate ? (await props.validate(props.state)) ?? [] : []\n\n  if (props.schema) {\n    const { errors, result } = await parseSchema(props.state, props.schema as FormSchema<typeof props.state>)\n    if (errors) {\n      errs = errs.concat(errors)\n    } else {\n      parsedValue.value = result\n    }\n  }\n\n  return resolveErrorIds(errs)\n}\n\nasync function _validate(opts: { name?: string | string[], silent?: boolean, nested?: boolean } = { silent: false, nested: true }): Promise<T | false> {\n  const names = opts.name && !Array.isArray(opts.name) ? [opts.name] : opts.name as string[]\n\n  const nestedValidatePromises = !names && opts.nested\n    ? Array.from(nestedForms.value.values()).map(\n      ({ validate }) => validate().then(() => undefined).catch((error: Error) => {\n        if (!(error instanceof FormValidationException)) {\n          throw error\n        }\n        return error\n      })\n    )\n    : []\n\n  if (names) {\n    const otherErrors = errors.value.filter(error => !names.some((name) => {\n      const pattern = inputs.value?.[name]?.pattern\n      return name === error.name || (pattern && error.name.match(pattern))\n    }))\n\n    const pathErrors = (await getErrors()).filter(error => names.some((name) => {\n      const pattern = inputs.value?.[name]?.pattern\n      return name === error.name || (pattern && error.name.match(pattern))\n    }))\n\n    errors.value = otherErrors.concat(pathErrors)\n  } else {\n    errors.value = await getErrors()\n  }\n\n  const childErrors = (await Promise.all(nestedValidatePromises)).filter(val => val)\n\n  if (errors.value.length + childErrors.length > 0) {\n    if (opts.silent) return false\n    throw new FormValidationException(formId, errors.value, childErrors)\n  }\n\n  return props.state as T\n}\n\nconst loading = ref(false)\nprovide(formLoadingInjectionKey, readonly(loading))\n\nasync function onSubmitWrapper(payload: Event) {\n  loading.value = true\n\n  const event = payload as FormSubmitEvent<any>\n\n  try {\n    await _validate({ nested: true })\n    event.data = props.schema ? parsedValue.value : props.state\n    await props.onSubmit?.(event)\n  } catch (error) {\n    if (!(error instanceof FormValidationException)) {\n      throw error\n    }\n\n    const errorEvent: FormErrorEvent = {\n      ...event,\n      errors: error.errors,\n      childrens: error.childrens\n    }\n    emits('error', errorEvent)\n  }\n\n  loading.value = false\n}\n\nconst disabled = computed(() => props.disabled || loading.value)\n\nprovide(formOptionsInjectionKey, computed(() => ({\n  disabled: disabled.value,\n  validateOnInputDelay: props.validateOnInputDelay\n})))\n\ndefineExpose<Form<T>>({\n  validate: _validate,\n  errors,\n\n  setErrors(errs: FormError[], name?: string) {\n    if (name) {\n      errors.value = errors.value\n        .filter(error => error.name !== name)\n        .concat(resolveErrorIds(errs))\n    } else {\n      errors.value = resolveErrorIds(errs)\n    }\n  },\n\n  async submit() {\n    await onSubmitWrapper(new Event('submit'))\n  },\n\n  getErrors(name?: string) {\n    if (name) {\n      return errors.value.filter(err => err.name === name)\n    }\n    return errors.value\n  },\n\n  clear(name?: string) {\n    if (name) {\n      errors.value = errors.value.filter(err => err.name !== name)\n    } else {\n      errors.value = []\n    }\n  },\n\n  disabled\n})\n</script>\n\n<template>\n  <component\n    :is=\"parentBus ? 'div' : 'form'\"\n    :id=\"formId\"\n    :class=\"form({ class: props.class })\"\n    @submit.prevent=\"onSubmitWrapper\"\n  >\n    <slot />\n  </component>\n</template>\n","\n<template>\n  <UIcon :name=\"icon\" :class=\"classes\"/>\n</template>\n\n<script setup lang=\"ts\">\n\nconst { icon, color, size=5 } = defineProps<{\n  icon: IconType,\n  color?: ColorType\n  size?: number\n}>();\n\nconst classes = computed(() => {\n  let value = \"\";\n\n  if (color) {\n    value += `text-[var(--ui-${color})] `;\n  }\n\n  if (size) {\n    value += `size-${size}`;\n  }\n\n  return value;\n});\n\n</script>","\n<template>\n  <UBadge v-if=\"as=='badge'\" :icon=\"icon\" :color=\"color\" :variant=\"variant\" class=\"mr-2\">\n    {{ text }}\n  </UBadge>\n\n  <ToolboxIcon v-else-if=\"icon\" :icon=\"icon\" :color=\"color\" :size=\"6\"/>\n</template>\n\n<script setup lang=\"ts\">\n\nconst { test, status, display = \"both\", as = \"badge\", variant = \"subtle\" } = defineProps<{\n  test?: APITypes.Test,\n  status?: APITypes.ResultStatusCode,\n  as?: \"badge\" | \"icon\",\n  display?: \"icon\" | \"text\" | \"both\",\n  variant?: \"solid\" | \"outline\" | \"soft\" | \"subtle\"\n}>();\n\nconst color = computed(() => {\n  if (test) return API.statusColor(test.severity)\n  return status == \"passed\" ? \"success\" : status;\n});\n\nconst text = computed(() => {\n  if (display == \"icon\") return \"\";\n  return color.value == \"success\" ? \"passed\" : color.value;\n});\n\nconst icon = computed(() => {\n  if (display == \"text\" || !color.value) return undefined;\n  return icons[color.value];\n});\n\n</script>\n","\n<template>\n  <div class=\"mb-5\">\n    <!-- Rule details -->\n    <UAlert :color=\"row.original.color\" variant=\"subtle\" :title=\"row.original.comment\" class=\"my-1 mb-3 text-wrap\"/>\n\n    <!-- Results table -->\n    <UTable :data=\"testResults\" :columns=\"columns\" class=\"table-ndr-validation-test-results\"/>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n\nimport type { TableColumn } from '@nuxt/ui';\nimport type { Row } from '@tanstack/vue-table'\nimport ToolboxBadgeStatus from '../toolbox/ToolboxBadgeStatus.vue';\nimport { UBadge } from '#components';\n\nconst { row, testResults=[] } = defineProps<{\n  row: Row<APITypes.TestSummary>,\n  testResults: APITypes.TestResult[]\n}>();\n\n\nconst columns: TableColumn<APITypes.TestResult>[] = [\n  {\n    accessorKey: \"status\",\n    header: \"Status\",\n    cell({ row }) {\n      return h(ToolboxBadgeStatus, {\n        status: row.original.status,\n        display: \"text\",\n      });\n    }\n  },\n  {\n    accessorKey: \"entityCategory\",\n    header: \"Category\",\n    cell({ row }) {\n      return h(UBadge, {\n        color: \"neutral\",\n        variant: \"subtle\",\n      }, () => row.original.entityCategory);\n    }\n  },\n  {\n    accessorKey: \"entity\",\n    header: \"Entity\",\n  },\n  {\n    accessorKey: \"location\",\n    header: \"Location\"\n  }\n];\n\n</script>\n\n<style lang=\"scss\">\n\n// Maximize width of entity column\n.table-ndr-validation-test-results td:nth-child(3) {\n  width: 100%;\n  white-space: normal !important;\n}\n\n.table-ndr-validation-test-results td:nth-child(4) {\n  white-space: no-wrap;\n}\n\n</style>\n","\n<template>\n  <UButton color=\"neutral\" variant=\"ghost\" :icon=\"icon\" :square=\"true\" class=\"bg-transparent flex-1\" :onclick=\"toggle\"/>\n</template>\n\n<script setup lang=\"ts\">\n\nimport type { Row } from '@tanstack/vue-table'\n\nconst { row } = defineProps<{ row: Row<any> }>();\n\nconst icon = computed(() => row.getIsExpanded() ? icons.down : icons.right);\n\nfunction toggle() {\n  row.toggleExpanded()\n}\n\n</script>","\n<template>\n  <div v-if=\"tests.length > 0\">\n    <UTable :data=\"testSummaries\" :columns=\"columns\" class=\"table-ndr-validation-test\">\n      <template #expanded=\"{ row }\">\n        <APIResponseReportNDRTest :row=\"row\" :test-results=\"results(row.original.testId)\"/>\n      </template>\n    </UTable>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { TableColumn } from '@nuxt/ui';\nimport { h } from 'vue'\nimport ToolboxButtonRowExpand from '../toolbox/ToolboxButtonRowExpand.vue';\nimport ToolboxIcon from '../toolbox/ToolboxIcon.vue';\n\nconst { tests } = defineProps<{tests: APITypes.Test[]}>();\n\nconst allResults = computed(() => {\n  let results = tests.flatMap(test => test.results) || [];\n\n  // TODO-API: Set entity category on test for skipped schemas\n  let utilityMessage = \"Skipped validation on NIEM utility schema.\";\n  let externalMessage = \"This warning can be ignored for external standards that are properly handled via NIEM adapter types.\";\n\n  results.forEach(item => {\n    if (item.testId == \"validate-ndr\") {\n      item.entityCategory = \"xs:schema\";\n      item.entity = item.message == utilityMessage ? utilityMessage : externalMessage;\n    }\n  });\n\n  return results;\n});\n\n/**\n * Combine test information from each result into a single unique array of basic test info.\n */\nconst testSummaries = computed(() => {\n  let testIDs = new Set(tests.map(test => test.id));\n\n  let summaries: APITypes.TestSummary[] = [];\n\n  testIDs.forEach((id) => {\n    let summary: Partial<APITypes.TestSummary> = {};\n    let results = allResults.value.filter(result => result.testId == id);\n    let result = results[0];\n\n    summary.testId = id;\n\n    if (result) {\n      let status = API.resultsStatus(results);\n\n      summary.ruleNumber = result.testId.replace(\"validate-ndr-rule_\", \"\");\n      summary.sortNumber = (summary.ruleNumber[0] == \"1\" ? \"\" : \"0\") + summary.ruleNumber;\n      summary.comment = result.comment;\n      summary.message = result.message;\n      summary.count = results.length;\n      summary.status = status;\n      summary.color = API.statusColor(status);\n      summary.icon = API.statusIcon(status);\n    }\n\n    // TODO-API: Update test description info for skipped schemas\n    if (id == \"validate-ndr\") {\n      summary.ruleNumber = \"n/a\";\n      summary.sortNumber = \"00-00\";\n      summary.message = \"No target namespace found. This attribute is required for NIEM conformant schemas.\";\n      summary.comment = \"Check schemas to see if any unintentionally missed validation checks due to lack of a valid NDR conformance target.\"\n    }\n\n    summaries.push(summary as APITypes.TestSummary);\n  });\n\n  return summaries.sort((a, b) => a.sortNumber.localeCompare(b.sortNumber));\n});\n\nfunction results(testId: string) {\n  return allResults.value\n  .filter(item => item.testId == testId)\n  .sort((a, b) => {\n    if (a.status < b.status) return -1;\n    if (a.status > b.status) return 1;\n    if (a.location < b.location) return -1;\n    if (a.location > b.location) return 1;\n    if (a.entity < b.entity) return -1;\n    if (a.entity > b.entity) return 1;\n    return 0;\n  });\n}\n\nconst columns: TableColumn<typeof testSummaries.value[0]>[] = [\n  {\n    id: 'expand',\n    cell: ({ row }) => h(ToolboxButtonRowExpand, { row })\n  },\n  {\n    accessorKey: \"status\",\n    header: \"Status\",\n    cell: ({ row }) => h(ToolboxIcon, {\n      icon: row.original.icon ,\n      color: row.original.color\n    })\n  },\n  {\n    accessorKey: \"ruleNumber\",\n    header: ( ) => h(\"div\", { class: \"text-right\" }, \"Rule\"),\n    cell: ({ row }) => h(\"div\", { class: \"text-right\" }, row.original.ruleNumber )\n  },\n  {\n    accessorKey: \"message\",\n    header: \"Message\",\n  },\n  {\n    accessorKey: \"count\",\n    header: \"Count\",\n    cell: ({ row }) => h(\"div\", { class: \"text-right mr-3\" }, row.original.count)\n  }\n]\n\n</script>\n\n<style lang=\"scss\">\n\n// Maximize width of message column\n.table-ndr-validation-test th:nth-child(4) {\n  width: 100%;\n}\n\n</style>","\n<template>\n  <p class=\"font-light mb-4\">{{ test.description }}</p>\n\n  <UTable :data=\"test.results.sort(sortTestResults)\" :columns=\"resultColumns\" class=\"table-generic-validation-results\" sticky>\n    <template #expanded=\"{ row }\">\n      <h3>Path:</h3>\n      <p class=\"mb-3\">{{ row.original.location }}</p>\n      <div v-if=\"row.original.status != 'passed'\">\n        <h3>Details:</h3>\n        <p class=\"text-wrap mb-3\">{{ row.original.message }}</p>\n      </div>\n    </template>\n  </UTable>\n</template>\n\n<script setup lang=\"ts\">\nimport { h, resolveComponent } from 'vue'\n\nconst UBadge = resolveComponent('UBadge')\nimport type { TableColumn } from '@nuxt/ui';\nimport ToolboxButtonRowExpand from '../toolbox/ToolboxButtonRowExpand.vue';\n\n\nconst { test } = defineProps<{ test: APITypes.Test }>();\n\n\n/**\n * Sort test results by filename and line.\n */\nfunction sortTestResults(a: APITypes.TestResult, b: APITypes.TestResult) {\n  let aFilename = a.location.split(\"/\").pop() || \"\";\n  let bFilename = b.location.split(\"/\").pop() || \"\";\n\n  let filenameComparison = aFilename.localeCompare(bFilename,undefined,{sensitivity: 'base'});\n  if (filenameComparison != 0) return filenameComparison;\n  return parseInt(a.line) - parseInt(b.line);\n}\n\nfunction testUI(status: APITypes.ResultStatusCode) {\n  let color = getResultColorClass(status);\n  return {\n    root: `ring-[var(--ui-${color})]/25`,\n    header: `bg-[var(--ui-${color})]/10 text-[var(--ui-${color})]`\n  }\n}\n\nfunction getResultIcon(severity: APITypes.ResultSeverityCode | APITypes.ResultStatusCode) {\n  switch (severity) {\n    case \"error\" : return icons.error;\n    case \"info\": return icons.info;\n    case \"warning\": return icons.warning;\n    case 'passed': return icons.success;\n  }\n}\n\nfunction getResultColorClass(severity: APITypes.ResultSeverityCode | APITypes.ResultStatusCode) {\n  switch (severity) {\n    case \"error\" : return \"error\";\n    case \"info\": return \"info\";\n    case \"warning\": return \"warning\";\n    case 'passed': return \"success\";\n  }\n}\n\nconst resultColumns: TableColumn<APITypes.TestResult>[] = [\n  {\n    id: 'expand',\n    cell: ({ row }) => h(ToolboxButtonRowExpand, { row })\n  },\n  // TODO: Refactor status badge\n  {\n    accessorKey: \"status\",\n    header: \"Status\",\n    size: 100,\n    cell: ({ row }) => {\n      const color = {\n        passed: 'success' as const,\n        error: 'error' as const,\n        warning: 'warning' as const\n      }[row.getValue('status') as string]\n\n      return h(UBadge, { variant: 'subtle', color }, () =>\n        row.getValue('status')\n      )\n    }\n  },\n  {\n    accessorKey: \"entityCategory\",\n    header: \"Category\",\n    cell({ getValue }) {\n      if (!getValue()) return;\n      return h(UBadge, { color: \"neutral\", variant: \"subtle\"}, getValue);\n    },\n\n    size: 150,\n    maxSize: 150\n  },\n  {\n    accessorKey: \"entity\",\n    header: \"Entity\",\n    cell: ({ getValue}) => h(\"span\", {class: 'w-[100px]'}, getValue),\n    size: 200,\n    maxSize: 200\n  },\n  {\n    accessorKey: \"location\",\n    header: \"File\",\n    cell: ({ row }) => row.original.location.split(\"/\")?.pop()\n  },\n  {\n    accessorKey: \"line\",\n    header: \"Line\",\n    size: 75,\n    maxSize: 75\n  },\n  {\n    accessorKey: \"column\",\n    header: \"Column\",\n    size: 75,\n    maxSize: 75\n  }\n];\n\n\n</script>\n\n<style lang=\"scss\">\n\n.table-generic-validation-results td:nth-child(4) {\n  width: 100%;\n  white-space: normal !important;\n}\n\n.table-generic-validation-results td:nth-child(5) {\n  white-space: no-wrap;\n}\n\n</style>\n","\n<template>\n  <UCard :class=\"cardClasses\" :ui=\"cardUI\">\n\n    <template #header>\n      <div class=\"flex justify-between\">\n        <ToolboxIconTitle :title=\"title\" :icon=\"icon\"/>\n        <UButton v-if=\"dismissible\" :icon=\"icons.close\" @click=\"panelDisplay='hidden'\" :class=\"closeButtonClasses\"/>\n      </div>\n    </template>\n\n    <template #default>\n      <slot name=\"default\"/>\n    </template>\n\n    <template #footer>\n      <slot name=\"footer\"/>\n    </template>\n  </UCard>\n\n</template>\n\n<script lang=\"ts\" setup>\n\nconst { title, icon, color=\"neutral\", dismissible=false } = defineProps<{\n  title: string,\n  icon: IconType,\n  color?: ColorType,\n  dismissible?: boolean\n}>();\n\n\nconst panelDisplay: Ref<\"\"|\"hidden\"> = ref(\"\");\n\nconst cardClasses = computed(() => `mt-[var(--app-vertical-spacer)] ${panelDisplay.value}`);\n\nconst closeButtonClasses = `right-0 p-0.5 bg-transparent text-[var(--ui-text-muted)] hover:text-[var(--ui-text)] font-medium text-sm hover:bg-inherit align-sub`;\n\nconst cardUI = computed(() => {\n  return {\n    root: `ring ring-inset ring-[var(--ui-${color})]/25 mt-[var(--app-vertical-spacer)] p-0`,\n    header: `p-2 px-8 text-sm font-medium bg-[var(--ui-${color})]/10 text-[var(--ui-${color})]`,\n    body: \"p-2 px-8\",\n    footer: \"p-2 px-8 text-sm font-light\"\n  }\n});\n\n</script>\n","\n<template>\n  <ToolboxCard v-if=\"results.request != 'unsent'\"\n  :title=\"title\" :icon=\"icon\" :color=\"color\" :dismissible=\"true\">\n\n    <template #default v-if=\"!results.report\">\n      <span class=\"whitespace-pre-line\">\n        <div>{{ results.message }}</div>\n      </span>\n    </template>\n\n    <template #default v-else>\n      <div class=\"spaced\">\n\n        <UAccordion v-model=\"activeSummaryItem\" :items=\"summaryItems\">\n          <template #body>\n            <UTable :data=\"resultCountData\" :ui=\"{base: 'min-w-80'}\"/>\n          </template>\n        </UAccordion>\n\n        <UAccordion :default-value=\"activeReportItems\" :items=\"testItems\" type=\"multiple\">\n          <template #default=\"{ item }\">\n            <span class=\"mr-2\">{{ item.label }}</span>\n            <!-- <UBadge :label=\"item.status\" :color=\"item.color\" variant=\"subtle\"/> -->\n          </template>\n\n          <template #body=\"{ item }\">\n            <APIResponseReportNDR v-if=\"item.kind=='ndr'\" :tests=\"item.tests\"/>\n            <APIResponseReportDefault v-else :test=\"item.tests[0]\"/>\n          </template>\n        </UAccordion>\n\n      </div>\n    </template>\n\n    <template #footer v-if=\"results.request == 'returned'\">\n      <p>Request returned in {{ results.time }} seconds</p>\n    </template>\n\n  </ToolboxCard>\n</template>\n\n<script setup lang=\"ts\">\n\nimport type { AccordionItem, TableData } from '@nuxt/ui';\n\nconst { results } = defineProps<{ results: APITypes.Results }>();\n\nconst activeSummaryItem = ref(\"0\");\nconst activeReportItems = ref<string[]>([]);\n\nconst title = computed(() => {\n  return results.title || results.status.toUpperCase();\n});\n\nconst icon = computed(() => icons[results.status]);\n\nconst color = computed(() => {\n  return results.status == 'pending' ? \"warning\" : results.status;\n});\n\nconst summaryItems = computed<AccordionItem[]>(() => {\n  return [\n    {\n      label: results.message,\n      icon: icons.download\n    }\n  ]\n});\n\nconst resultCountData = computed<TableData[]>(() => {\n  if (!results.report) return [];\n  return [\n    {\n      summary: \"Info\",\n      count: results.report.info\n    },\n    {\n      summary: \"Warnings\",\n      count: results.report.warnings\n    },\n    {\n      summary: \"Errors\",\n      count: results.report.errors\n    },\n  ]\n});\n\nconst reportTests = computed(() => {\n  return results.report?.tests || [];\n});\n\nconst ndrTests = computed(() => {\n  return  reportTests.value.filter(test => test.id.startsWith(\"validate-ndr\"));\n});\n\nconst otherTests = computed(() => {\n  return reportTests.value.filter(test => !test.id.startsWith(\"validate-ndr\"));\n});\n\ntype TestAccordionItem = Partial<AccordionItem> & {\n  kind?: \"ndr\",\n  status: string,\n  color: ColorType,\n  tests: APITypes.Test[]\n}\n\nconst testItems = computed<TestAccordionItem[]>(() => {\n\n  // Add other tests individually\n  let items: TestAccordionItem[] = otherTests.value.map(test => {\n\n    let tests = otherTests.value.filter(item => item.id == test.id);\n    let status = API.testsStatus(tests);\n\n    return {\n      label: test.id,\n      icon: icons.checklist,\n      tests,\n      status,\n      color: API.statusColor(status)\n    }\n  });\n\n  // Add NDR tests bundled together as one\n  if (ndrTests.value.length > 0) {\n    let status = API.testsStatus(ndrTests.value);\n\n    items.push({\n      label: \"NDR validation report\",\n      icon: icons.checklist,\n      kind: \"ndr\",\n      tests: ndrTests.value,\n      status,\n      color: API.statusColor(status)\n    })\n  }\n\n  // Add array indices to report active items to open each accordion item by default\n  let index = 0;\n  items.forEach(item => {\n    activeReportItems.value.push(index.toString());\n    index++;\n  });\n\n  return items;\n});\n\n</script>\n"],"names":["cardUI","__props","isYupSchema","schema","isYupError","error","isSuperStructSchema","isZodSchema","isJoiSchema","isJoiError","isValibotSchema","isStandardSchema","validateStandarSchema","state","result","_a","issue","item","validateYupSchema","validateSuperstructSchema","err","validateZodSchema","validateJoiSchema","validateValibotSchema","parseSchema","FormValidationException","formId","errors","childErrors","__publicField","theme","appConfig","_appConfig","form","tv","props","emits","__emit","useId","bus","useEventBus","parentBus","inject","formBusInjectionKey","provide","nestedForms","ref","onMounted","event","_validate","onUnmounted","nextTick","inputs","formInputsInjectionKey","resolveErrorIds","errs","parsedValue","getErrors","opts","names","nestedValidatePromises","validate","otherErrors","name","pattern","_b","pathErrors","val","loading","formLoadingInjectionKey","readonly","onSubmitWrapper","payload","errorEvent","disabled","computed","formOptionsInjectionKey","__expose","classes","value","color","API","text","icon","icons","columns","row","h","ToolboxBadgeStatus","UBadge","toggle","allResults","results","test","utilityMessage","externalMessage","testSummaries","testIDs","summaries","id","summary","status","a","b","testId","ToolboxButtonRowExpand","ToolboxIcon","__nuxt_component_0","sortTestResults","aFilename","bFilename","filenameComparison","resultColumns","getValue","closeButtonClasses","panelDisplay","cardClasses","activeSummaryItem","activeReportItems","title","summaryItems","resultCountData","reportTests","ndrTests","otherTests","testItems","items","tests","index"],"mappings":"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","x_google_ignoreList":[1,2,4]}