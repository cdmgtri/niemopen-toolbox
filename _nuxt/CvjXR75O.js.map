{"version":3,"file":"CvjXR75O.js","sources":["../../../../components/content/ContentProperty.vue"],"sourcesContent":["\r\n<template>\r\n  <EntityContents :as=\"as\" :entity=\"property\">\r\n\r\n    <template #contents>\r\n      <ContentTypeContents v-if=\"type\" :type=\"type\"/>\r\n    </template>\r\n\r\n    <template #usages>\r\n      <!-- TODO: Property usages -->\r\n      <ContentPlaceholder label=\"PROPERTY USAGES\"/>\r\n      <ul>\r\n        <li v-for=\"usage of usages\">\r\n          {{ usage.type?.qname }} > {{ usage.property?.qname }}\r\n        </li>\r\n      </ul>\r\n    </template>\r\n\r\n  </EntityContents>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport type { ChildProperty } from '~/utils/niem/ChildProperty';\r\nimport type { Property } from '~/utils/niem/Property';\r\nimport type { Type } from '~/utils/niem/Type';\r\n\r\nconst { property } = defineProps<{\r\n  property: Property,\r\n  as: ContentsAsType\r\n}>();\r\n\r\nconst toolbox = useToolboxStore();\r\n\r\nlet type: Type | undefined;\r\n\r\nif (property.type) {\r\n  type = await toolbox.type({...property.params, qname: property.type?.qname});\r\n}\r\n\r\nlet usages: ChildProperty[] = await toolbox.childPropertiesWithProperty(property);\r\n\r\nproperty.usagesCount = usages.length;\r\n\r\n</script>\r\n"],"names":["toolbox","useToolboxStore","type","__props","__temp","__restore","_withAsyncContext","_a","usages"],"mappings":"wTA+BA,MAAMA,EAAUC,EAAgB,EAE5B,IAAAC,EAEAC,EAAQ,SAAC,OACED,GAAA,CAAAE,EAAAC,CAAA,EAAAC,EAAA,WAAA,OAAAN,EAAQ,KAAK,CAAC,GAAGG,EAAQ,SAAC,OAAQ,OAAOI,EAAAJ,EAAQ,SAAC,OAAT,YAAAI,EAAe,KAAM,CAAA,EAAA,oBAG7E,IAAIC,GAA0B,CAAAJ,EAAAC,CAAA,EAAAC,EAAA,IAAMN,EAAQ,4BAA4BG,EAAQ,QAAA,CAAA,mBAEhF,OAAAA,EAAA,SAAS,YAAcK,EAAO"}