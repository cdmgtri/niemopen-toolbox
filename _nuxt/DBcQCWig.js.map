{"version":3,"file":"DBcQCWig.js","sources":["../../../../utils/toolbox/validation.ts","../../../../pages/validate.vue"],"sourcesContent":["import type { SelectItem } from \"@nuxt/ui\"\n\nexport type InputFileType = {\n  description: string,\n  icon: string,\n  paramName: string,\n  file?: File,\n  validExtensions: string[],\n  pathValidExample: string,\n  pathInvalidExample: string\n}\n\nexport type ValidationItemType = SelectItem & {\n  value?: APITypes.ValidationKindType,\n  description?: string,\n  note?: string,\n  group: \"display\" | \"XSD\" | \"XML\",\n  extensions?: string[],\n  route?: string,\n  file1?: InputFileType,\n  file2?: InputFileType\n}\n\nexport const validationMenuItems: ValidationItemType[] = [\n  {\n    label: \"XML schemas\",\n    type: \"label\",\n    group: \"display\",\n  },\n  {\n    value: \"ndr\",\n    label: \"Validate NDR conformance\",\n    type: \"item\",\n    description: \"Check one or more NIEM XML schemas against the NIEM Naming and Design Rules (NDR)\",\n    extensions: [\"xsd\", \"zip\"],\n    icon: icons.book,\n    group: \"XSD\",\n    route: API.routes.validate_ndr,\n    file1: {\n      icon: icons.xml,\n      description: \"NIEM XSD\",\n      paramName: \"file\",\n      validExtensions: [\".xsd\", \".zip\"],\n      pathValidExample: \"demo/validate/ndr/CrashDriver-6.0.zip\",\n      pathInvalidExample : \"demo/validate/ndr/Crash Driver IEPD 5.0 invalid.zip\"\n    }\n  },\n  {\n    value: \"xsd\",\n    label: \"Validate XSD\",\n    type: \"item\",\n    description: \"Validate one or more XML schemas to check that the basic syntax is correct.\",\n    extensions: [\"xsd\", \"zip\"],\n    icon: icons.xml,\n    group: \"XSD\",\n    route: API.routes.validate_xsd,\n    file1: {\n      icon: icons.xml,\n      description: \"XSD\",\n      paramName: \"file\",\n      validExtensions: [\".xsd\", \".zip\"],\n      pathValidExample: \"demo/validate/xml/single/person.xsd\",\n      pathInvalidExample : \"demo/validate/xml/single/person-invalid.xsd\"\n    }\n  },\n  {\n    type: \"separator\",\n    group: \"display\"\n  },\n  {\n    label: \"XML instances\",\n    type: \"label\",\n    group: \"display\"\n  },\n  {\n    value: \"cmf\",\n    label: \"Validate CMF\",\n    type: \"item\",\n    description: \"Validate a CMF file (an XML instance file) against its NIEM CMF XML schema.\",\n    note: \"Note that this does not check NDR conformance of the content.\",\n    extensions: [\"xml\", \"cmf\"],\n    icon: icons.xml,\n    group: \"XML\",\n    route: API.routes.validate_cmf,\n    file1: {\n      icon: icons.xml,\n      description: \"CMF\",\n      paramName: \"file\",\n      validExtensions: [\".cmf\", \".xml\"],\n      pathValidExample: \"demo/validate/xml/cmf/CrashDriver-5.0.cmf.xml\",\n      pathInvalidExample : \"demo/validate/xml/cmf/CrashDriver-5.0-invalid.cmf.xml\"\n    }\n  },\n  {\n    value: \"xml\",\n    label: \"Validate XML\",\n    type: \"item\",\n    description: \"Validate one or more XML instances against its user-provided XML schemas.\",\n    extensions: [\"xml\"],\n    icon: icons.xml,\n    group: \"XML\",\n    route: API.routes.validate_xml,\n    file1: {\n      icon: icons.xml,\n      description: \"XML instance\",\n      paramName: \"xml\",\n      validExtensions: [\".xml\"],\n      pathValidExample: \"demo/validate/xml/single/person.xml\",\n      pathInvalidExample : \"demo/validate/xml/single/person-invalid.xml\"\n\n    },\n    file2: {\n      icon: icons.zip,\n      description: \"NIEM XSD\",\n      paramName: \"xsd\",\n      validExtensions: [\".xsd\", \".zip\"],\n      pathValidExample: \"demo/validate/xml/single/person.xsd\",\n      pathInvalidExample: \"demo/validate/xml/single/person.xsd\"\n    }\n  },\n  {\n    value: \"message-catalog\",\n    label: \"Validate message catalog\",\n    type: \"item\",\n    description: \"Validate an IEPD or message catalog (an XML instance file) against its NIEM IEPD / message catalog schema.\",\n    extensions: [\"xml\"],\n    icon: icons.xml,\n    group: \"XML\",\n    route: API.routes.validate_message_catalog,\n    file1: {\n      icon: icons.xml,\n      description: \"message-catalog.xml or iepd-catalog.xml\",\n      paramName: \"file\",\n      validExtensions: [\".xml\"],\n      pathValidExample: \"demo/validate/xml/message-catalog/valid-5.0/iepd-catalog.xml\",\n      pathInvalidExample : \"demo/validate/xml/message-catalog/invalid-5.0/iepd-catalog.xml\"\n    }\n  },\n  {\n    value: \"xml-catalog\",\n    label: \"Validate XML catalog\",\n    type: \"item\",\n    description: \"Validate an XML catalog (an XML instance file) against the OASIS schema specification for XML catalogs.\",\n    extensions: [\"xml\"],\n    icon: icons.xml,\n    group: \"XML\",\n    route: API.routes.validate_xml_catalog,\n    file1: {\n      icon: icons.xml,\n      description: \"xml-catalog.xml\",\n      paramName: \"file\",\n      validExtensions: [\".xml\"],\n      pathValidExample: \"demo/validate/xml/xml-catalog/xml-catalog-valid.xml\",\n      pathInvalidExample : \"demo/validate/xml/xml-catalog/xml-catalog-invalid.xml\"\n    }\n  }\n]\n","\n<template>\n  <PageHeader :page=\"AppItems.validate\">\n    <template #user>\n      <p>\n        Validate NIEM artifacts and check NDR conformance.\n      </p>\n\n      <p class=\"font-semibold\">Notes:</p>\n\n      <ul class=\"bullets spaced-sm\">\n        <li>\n          Use the <ULink to=\"/transform\">Transform</ULink> feature to convert a CMF model to XSD to check NDR conformance.\n        </li>\n        <li>\n          JSON instance and schema validation is not yet available.\n        </li>\n        <li>\n          CSV results are download-only at this time and cannot be displayed.\n        </li>\n      </ul>\n\n      <div v-for=\"[key, kinds] of Object.entries(groupedValidationItems)\">\n        <p class=\"font-semibold mb-3\">{{ key }} validation options:</p>\n\n        <ul class=\"bullets spaced-sm\">\n          <li v-for=\"kind in kinds\">\n            <span class=\"font-semibold\">{{ kind.label }}</span> -\n            <span>{{ kind.description }}</span>\n            <span v-if=\"kind.note\" class=\"font-light\"><br/>{{ kind.note }}</span>\n          </li>\n        </ul>\n\n        <br/>\n\n      </div>\n\n    </template>\n\n    <template #developer>\n      <ToolboxCodePanel title=\"POST request\" :code=\"code\"/>\n    </template>\n  </PageHeader>\n\n  <UCard>\n\n    <UForm ref=\"form\"\n    :state=\"state\"\n    :validate=\"validate\"\n    @submit.prevent=\"onSubmit\" enctype=\"multipart/form-data\"\n    >\n\n      <!-- 1. Select validation type -->\n      <UFormField\n      name=\"kind\" required\n      label=\"1. Select validation kind\"\n      :help=\"validationItem?.description\"\n      >\n        <!-- @vue-expect-error -->\n        <USelect v-model=\"state.kind\" :items=\"validationMenuItems\" @change=\"onValidationKindChange\" :icon=\"validationItem?.icon\" class=\"w-64\"/>\n      </UFormField>\n\n      <!-- 2. Select result format -->\n      <UFormField\n      name=\"mediaType\" required\n      label=\"2. Select results format\"\n      >\n        <USelect v-model=\"state.mediaType\" :items=\"mediaTypeItems\" :icon=\"mediaTypeIcon\"  class=\"w-64\"/>\n      </UFormField>\n\n      <!-- 3. Required File 1 -->\n      <UFormField name=\"file1\" required label=\"3. Select a file to validate\" :help=\"fileHelp(validationItem?.file1?.description)\">\n\n        <!-- File 1 as upload -->\n        <span v-if=\"inputMode=='upload'\">\n          <UInput type=\"file\" @change=\"onFile1Change\" :accept=\"validationItem?.file1?.validExtensions\" :icon=\"validationItem?.file1?.icon || icons.upload\" :ui=\"UI.inputFileInGroup\">\n            <template #trailing>{{ file1TypeLabel }}</template>\n          </UInput>\n        </span>\n\n        <!-- File 1 as demo file -->\n        <span v-else>\n          <UInput v-model=\"demoFile1\" :ui=\"UI.inputFileInGroup\" :icon=\"icons.magic\"/>\n        </span>\n\n        <!-- Select upload file or demo file option -->\n        <!-- @vue-expect-error -->\n        <USelect v-model=\"inputMode\" :items=\"inputModeItems\" color=\"neutral\" variant=\"subtle\" :ui=\"UI.inputMode\" :icon=\"inputModeSelectedItem?.icon\"/>\n\n      </UFormField>\n\n      <!-- 4. Optional File 2 -->\n      <UFormField\n      v-if=\"validationItem?.file2\"\n      name=\"file2\"\n      label=\"4. Select supporting file for validation\"\n      :help=\"fileHelp(validationItem.file2.description)\"\n      >\n\n        <!-- File 2 as upload -->\n        <UInput v-if=\"inputMode=='upload'\" type=\"file\" @change=\"onFile2Change\" :accept=\"validationItem.file2.validExtensions\" :icon=\"validationItem?.file2?.icon || icons.upload\" :ui=\"UI.inputFileInGroup\">\n          <template #trailing>{{ file2TypeLabel }}</template>\n        </UInput>\n\n        <!-- File 2 as demo file -->\n        <span v-else>\n          <UInput v-model=\"demoFile2\" :ui=\"UI.inputFileInGroup\" :icon=\"icons.magic\"/>\n        </span>\n      </UFormField>\n\n      <UButton type=\"submit\">Validate</UButton>\n\n    </UForm>\n\n  </UCard>\n\n  <APIResponsePanel :results=\"results\" :kind=\"state.kind\"/>\n\n</template>\n\n<script setup lang=\"ts\">\n\nimport type { SelectItem } from \"@nuxt/ui\";\nimport type { InputFileType } from \"../utils/toolbox/validation\";\nimport { validationMenuItems } from \"../utils/toolbox/validation\";\n\n// *** Input mode ***\n\ntype InputMode = \"upload\" | \"valid\" | \"invalid\";\n\n// Allow user to choose between uploading file and using an available demo file\nconst inputMode: Ref<InputMode> = ref(\"upload\");\n\ntype InputModeItem = SelectItem & {\n  value?: InputMode,\n  icon?: IconType\n}\n\nconst inputModeItems: InputModeItem[] = [\n  {\n    value: \"upload\",\n    icon: icons.upload,\n    label: \"Upload\"\n  },\n  {\n    type: \"separator\"\n  },\n  {\n    type: \"label\",\n    label: \"Demo files\"\n  },\n  {\n    value: \"valid\",\n    icon: icons.success,\n    label: \"Valid\",\n\n  },\n  {\n    value: \"invalid\",\n    icon: icons.error,\n    label: \"Invalid\"\n  }\n]\n\nconst inputModeSelectedItem = computed(() => {\n  return inputModeItems.find(item => item.value == inputMode.value);\n});\n\n// Reset state when switching input modes\nwatch(inputMode, async (newValue, oldValue) => {\n  await updateFiles();\n});\n\nconst demoFile1 = ref();\nconst demoFile2 = ref();\n\n\nasync function onValidationKindChange() {\n  await updateFiles();\n}\n\n// *** File change ***\n\n/**\n * Update the file state since `v-model` doesn't work on file inputs.\n */\nfunction onFile1Change(event: Event) {\n  file1Error.value = \"\";\n  state.file1 = ToolboxForm.fileInput(event);\n  results.request = \"unsent\";\n}\n\n/**\n * Update the file state since `v-model` doesn't work on file inputs.\n */\nfunction onFile2Change(event: Event) {\n  file2Error.value = \"\";\n  state.file2 = ToolboxForm.fileInput(event);\n  results.request = \"unsent\";\n}\n\nasync function updateFiles() {\n  results.request = \"unsent\";\n  if (inputMode.value == \"valid\") {\n    state.file1 = await ToolboxForm.loadPublicFile(validationItem.value?.file1?.pathValidExample);\n\n    if (validationItem.value?.file2) {\n      state.file2 = await ToolboxForm.loadPublicFile(validationItem.value?.file2.pathValidExample);\n    }\n  }\n  else if (inputMode.value == \"invalid\") {\n    state.file1 = await ToolboxForm.loadPublicFile(validationItem.value?.file1?.pathInvalidExample);\n\n    if (validationItem.value?.file2) {\n      state.file2 = await ToolboxForm.loadPublicFile(validationItem.value?.file2.pathInvalidExample);\n    }\n  }\n\n  if (inputMode.value != \"upload\") {\n    demoFile1.value = state.file1?.name;\n    demoFile2.value = state.file2?.name;\n  }\n}\n\n\n// *** State ***\n\ntype ValidateStateType = {\n  kind: APITypes.ValidationKindType,\n  file1: File\n  file2?: File,\n  mediaType: \"json\" | \"csv\"\n}\n\nconst state = reactive<Partial<ValidateStateType>>({\n  mediaType: \"json\"\n});\n\nconst validationItems = reactive(validationMenuItems.filter(item => item.type == \"item\"));\n\nconst groupedValidationItems = reactive({\n  XSD: validationItems.filter(item => item.group == \"XSD\"),\n  XML: validationItems.filter(item => item.group == \"XML\")\n});\n\nconst validationItem = computed(() => {\n  return validationItems.find(item => item.value == state.kind);\n})\n\nconst file1TypeLabel = computed(() => fileTypeLabelHelper(validationItem.value?.file1));\nconst file2TypeLabel = computed(() => fileTypeLabelHelper(validationItem.value?.file2));\n\nfunction fileTypeLabelHelper(file: InputFileType | undefined) {\n  if (!file) return \"\";\n  let extensions = file.validExtensions;\n  let text = extensions.join(\" | \").replaceAll(\".\", \"\").toUpperCase();\n  return `(${text})`\n}\n\nconst mediaTypeItems = API.reportMediaTypes;\n\nconst mediaTypeIcon = computed(() => {\n  return API.mediaTypeIcon(state.mediaType);\n})\n\nconst mediaTypeQueryString = computed(() => {\n  return API.mediaTypeQueryString(state.mediaType)\n});\n\nfunction fileHelp(fileDescription: string | undefined) {\n  if (inputMode.value == \"upload\") {\n    return `${ToolboxForm.UPLOAD_WARNING} | ${fileDescription || \"(pending)\"}`;\n  }\n  return ToolboxForm.DEMO_FILE_MESSAGE;\n}\n\nconst extension1 = computed(() => {\n  return ToolboxApp.extension(validationItem.value?.file1?.file?.name);\n})\n\nconst extension2 = computed(() => {\n  return ToolboxApp.extension(validationItem.value?.file2?.file?.name);\n})\n\n\n\n// *** Developer information panel ***\n\n// Compute the second file parameter if applicable\nconst codeFileParam2 = computed(() => validationItem.value?.file2 != undefined ? `-F ${validationItem.value?.file2?.paramName}=@${ state.file2?.name }` : \"\");\n\n// Compute the curl statement for the developer information panel\nconst code = computed(() => `curl -i -X POST -H \"Content-Type: multipart/form-data\" -F ${validationItem.value?.file1?.paramName}=@${ state.file1?.name } ${codeFileParam2.value} ${ validationItem.value?.route}${mediaTypeQueryString.value}`);\n\n\n// *** Form validation ***\n\nconst form = useTemplateRef(\"form\");\n\nconst file1Error = ref(\"\");\nconst file2Error = ref(\"\");\n\nlet validationFinalPass = false;\n\nfunction validate(state: Partial<ValidateStateType>) {\n\n  const errors = ToolboxForm.initFormErrors();\n\n  // Check required fields\n  ToolboxForm.validateRequiredField(errors, \"kind\", state.kind);\n  ToolboxForm.validateRequiredField(errors, \"resultFormat\", state.mediaType);\n\n  // Check that the file(s) have been uploaded or selected and have a valid extension\n  if (validationFinalPass) {\n    ToolboxForm.validateRequiredField(errors, \"file1\", state.file1);\n    ToolboxForm.validateFileExtension(errors, \"file1\", validationItem.value?.file1?.validExtensions || [], extension1.value);\n\n    if (validationItem.value?.file2) {\n      ToolboxForm.validateRequiredField(errors, \"file2\", state.file2);\n      ToolboxForm.validateFileExtension(errors, \"file2\", validationItem.value?.file2?.validExtensions || [], extension2.value);\n    }\n  }\n\n  return errors;\n}\n\n\n// *** Submit ***\n\nconst results = API.initResults();\n\nasync function onSubmit() {\n\n  // Include files in final round of validation check\n  validationFinalPass = true;\n  let validateResults = await form.value?.validate();\n  if (validateResults == false\n        || !validationItem.value?.file1\n        || !validationItem.value.route\n        || !state.file1\n  ) {\n    return;\n  }\n\n  // Add first file\n  let customState: {[key: string]: any} = {};\n  customState[validationItem.value.file1?.paramName] = state.file1;\n\n  // Add optional second file\n  if (validationItem.value.file2) {\n    customState[validationItem.value.file2.paramName] = state.file2;\n  }\n\n  // Add the media type\n  customState.mediaType = state.mediaType;\n\n  // Set the filename for the download results, with qualifier to distinguish kinds of validation.\n  let baseName = state.file1.name.split(\".\").slice(0, -1).join(\".\").replaceAll(\" \", \"-\");\n  let qualifier = validationItem.value.value == \"message-catalog\" || validationItem.value.value == \"xml-catalog\" ? \"\" : validationItem.value.value + \"-\";\n  results.filename = `${baseName}-${qualifier}validation-report.${state.mediaType}`;\n\n  // Make the validation request from the NIEM API and download the results\n  const response = await API.post(validationItem.value.route, customState, results, false);\n  await API.downloadReportResults(state.mediaType as APIMediaType, response, results);\n\n  // Reset validation checks\n  validationFinalPass = false;\n\n}\n\n</script>\n"],"names":["validationMenuItems","icons","API","inputMode","ref","inputModeItems","inputModeSelectedItem","computed","item","watch","newValue","oldValue","updateFiles","demoFile1","demoFile2","onValidationKindChange","onFile1Change","event","file1Error","state","ToolboxForm","results","onFile2Change","file2Error","_b","_a","validationItem","_c","_d","_f","_e","_g","_h","_i","_j","reactive","validationItems","groupedValidationItems","file1TypeLabel","fileTypeLabelHelper","file2TypeLabel","file","mediaTypeItems","mediaTypeIcon","mediaTypeQueryString","fileHelp","fileDescription","extension1","ToolboxApp","extension2","codeFileParam2","code","form","useTemplateRef","validationFinalPass","validate","errors","onSubmit","customState","baseName","qualifier","response"],"mappings":"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"}