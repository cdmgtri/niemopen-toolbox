{"version":3,"file":"D6uUyMch.js","sources":["../../../../components/list/ListNamespacesByCategory.vue","../../../../components/content/ContentVersion.vue"],"sourcesContent":["\r\n<template>\r\n  <UAccordion type=\"multiple\" :items=\"namespaceCategoryItems\">\r\n    <template #default=\"{ item }\">\r\n      <div class=\"capitalize\">\r\n        {{ item.label }}\r\n      </div>\r\n    </template>\r\n\r\n    <template #body=\"{ item }\">\r\n      <ListTemplate :entities=\"item.namespaces\" class=\"pl-4\" :disableExpand=\"true\" :useLabelQualifier=\"true\"/>\r\n    </template>\r\n  </UAccordion>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { Namespace } from '~/utils/niem/Namespace';\r\nimport type { AccordionItem } from '@nuxt/ui';\r\n\r\nconst { namespaces = [] } = defineProps<{ namespaces?: Namespace[] }>();\r\n\r\n// Unique list of namespace categories\r\nconst namespaceCategories = [\r\n  ...new Set(namespaces.map(namespace => namespace.category))\r\n]\r\n.filter(namespaceCategory => namespaceCategory != undefined)\r\n.sort(Namespace.sortCategories);\r\n\r\ntype NamespaceCategoryItem = AccordionItem & {\r\n  namespaces: Namespace[]\r\n}\r\n\r\n// Accordion items for each namespace category\r\nconst namespaceCategoryItems: NamespaceCategoryItem[] = namespaceCategories.map(category => {\r\n  let filteredNamespaces = namespaces\r\n    .filter(namespace => namespace.category == category)\r\n    .sort(Namespace.sort)\r\n\r\n  return {\r\n    icon: icons.namespace,\r\n    label: `${category} (${filteredNamespaces.length})`,\r\n    namespaces: filteredNamespaces\r\n  }\r\n})\r\n\r\n// Additional accordion item for namespaces with an undefined category\r\nconst undefinedNamespaces = namespaces.filter(namespace => namespace.category == undefined);\r\n\r\nif (undefinedNamespaces.length > 0) {\r\n  namespaceCategoryItems.push({\r\n    icon: icons.namespace,\r\n    label: `[undefined] ${undefinedNamespaces.length}`,\r\n    namespaces: undefinedNamespaces\r\n  })\r\n}\r\n\r\n\r\n</script>\r\n","\r\n<template>\r\n  <EntityContents :as=\"as\" :entity=\"version\">\r\n\r\n    <template #namespaces>\r\n      <ListNamespacesByCategory v-if=\"groupNamespacesByCategory\" :namespaces=\"namespaces\"/>\r\n      <ListNamespaces v-else :namespaces=\"namespaces\"/>\r\n    </template>\r\n\r\n    <template #properties>\r\n      <ListProperties :properties=\"properties\" :enable-more=\"enableMoreProperties\" @load-more=\"loadMoreProperties\"/>\r\n    </template>\r\n\r\n    <template #types>\r\n      <ListTypes :types=\"types\" :enable-more=\"enableMoreTypes\" @load-more=\"loadMoreTypes\"/>\r\n    </template>\r\n\r\n    <template v-for=\"panel in ToolboxApp.PAGE_PANEL_NAMES\" #[panel]>\r\n      <slot :name=\"panel\" v-if=\"panel in $slots\"/>\r\n    </template>\r\n\r\n  </EntityContents>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport type { Property } from '~/utils/niem/Property';\r\nimport type { Type } from '~/utils/niem/Type';\r\nimport { Version } from '~/utils/niem/Version';\r\n\r\nconst { version, groupNamespacesByCategory = false } = defineProps<{\r\n  as: ContentsAsType,\r\n  version: Version,\r\n  groupNamespacesByCategory?: boolean\r\n}>();\r\n\r\nconst toolbox = useToolboxStore();\r\n\r\nconst namespaces = await toolbox.namespaces(version);\r\nversion.namespacesCount = namespaces.length;\r\n\r\nconst properties: Ref<Property[]> = ref([]);\r\nconst types: Ref<Type[]> = ref([]);\r\n\r\nconst enableMoreProperties = computed<boolean>(() => {\r\n  return !version.propertiesLoaded;\r\n});\r\n\r\nconst enableMoreTypes = computed<boolean>(() => {\r\n  return !version.typesLoaded;\r\n});\r\n\r\nversion.propertiesCount = 0;\r\nversion.typesCount = 0;\r\n\r\n// Initial load\r\nawait loadMoreProperties();\r\nawait loadMoreTypes();\r\n\r\nasync function loadMoreProperties() {\r\n  if (version.propertiesLoaded) return;\r\n  if (!version.propertiesCount) version.propertiesCount = 0;\r\n\r\n  let results = await toolbox.propertiesFromVersion(version, properties.value.length);\r\n  if (results.length < API.PAGINATION_LIMIT) {\r\n    version.propertiesLoaded = true;\r\n  }\r\n  version.propertiesCount += results.length;\r\n  properties.value.push(...results);\r\n}\r\n\r\nasync function loadMoreTypes() {\r\n  if (version.typesLoaded) return;\r\n  if (!version.typesCount) version.typesCount = 0;\r\n\r\n  let results = await toolbox.typesFromVersion(version, types.value.length);\r\n  if (results.length < API.PAGINATION_LIMIT) {\r\n    version.typesLoaded = true;\r\n  }\r\n  version.typesCount += results.length;\r\n  types.value.push(...results);\r\n}\r\n\r\n</script>\r\n"],"names":["namespaceCategoryItems","__props","namespace","namespaceCategory","Namespace","category","filteredNamespaces","icons","undefinedNamespaces","toolbox","useToolboxStore","namespaces","__temp","__restore","_withAsyncContext","properties","ref","types","enableMoreProperties","computed","enableMoreTypes","loadMoreProperties","loadMoreTypes","results","API"],"mappings":"ofAiCM,MAAAA,EAXsB,CAC1B,GAAG,IAAI,IAAIC,EAAU,WAAC,IAAIC,GAAaA,EAAU,QAAQ,CAAC,CAAA,EAE3D,OAA4BC,GAAAA,GAAqB,IAAS,EAC1D,KAAKC,EAAU,cAAc,EAO8C,IAAgBC,GAAA,CACtF,IAAAC,EAAqBL,EAAU,WAChC,OAAOC,GAAaA,EAAU,UAAYG,CAAQ,EAClD,KAAKD,EAAU,IAAI,EAEf,MAAA,CACL,KAAMG,EAAM,UACZ,MAAO,GAAGF,CAAQ,KAAKC,EAAmB,MAAM,IAChD,WAAYA,CACd,CAAA,CACD,EAGKE,EAAsBP,EAAU,WAAC,OAAoBC,GAAAA,EAAU,UAAY,IAAS,EAEtF,OAAAM,EAAoB,OAAS,GAC/BR,EAAuB,KAAK,CAC1B,KAAMO,EAAM,UACZ,MAAO,eAAeC,EAAoB,MAAM,GAChD,WAAYA,CAAA,CACb,glBClBH,MAAMC,EAAUC,EAAgB,EAE1BC,GAAa,CAAAC,EAAAC,CAAA,EAAAC,EAAA,IAAML,EAAQ,WAAWR,EAAO,OAAA,CAAA,mBACnDA,EAAA,QAAQ,gBAAkBU,EAAW,OAE/B,MAAAI,EAA8BC,EAAI,EAAE,EACpCC,EAAqBD,EAAI,EAAE,EAE3BE,EAAuBC,EAAkB,IACtC,CAAClB,EAAO,QAAC,gBACjB,EAEKmB,EAAkBD,EAAkB,IACjC,CAAClB,EAAO,QAAC,WACjB,EAEDA,EAAO,QAAC,gBAAkB,EAC1BA,EAAA,QAAQ,WAAa,EAGrB,CAAAW,EAAAC,CAAA,EAAAC,EAAA,IAAMO,GAAmB,cACzB,CAAAT,EAAAC,CAAA,EAAAC,EAAA,IAAMQ,GAAc,cAEpB,eAAeD,GAAqB,CAC9B,GAAApB,EAAA,QAAQ,iBAAkB,OACzBA,EAAA,QAAQ,kBAAiBA,EAAA,QAAQ,gBAAkB,GAEpD,IAAAsB,EAAU,MAAMd,EAAQ,sBAAsBR,UAASc,EAAW,MAAM,MAAM,EAC9EQ,EAAQ,OAASC,EAAI,mBACvBvB,EAAA,QAAQ,iBAAmB,IAEtBA,EAAA,QAAC,iBAAmBsB,EAAQ,OACxBR,EAAA,MAAM,KAAK,GAAGQ,CAAO,CAAA,CAGlC,eAAeD,GAAgB,CACzB,GAAArB,EAAO,QAAC,YAAa,OACpBA,EAAO,QAAC,aAAYA,UAAQ,WAAa,GAE1C,IAAAsB,EAAU,MAAMd,EAAQ,iBAAiBR,EAAA,QAASgB,EAAM,MAAM,MAAM,EACpEM,EAAQ,OAASC,EAAI,mBACvBvB,EAAA,QAAQ,YAAc,IAExBA,EAAA,QAAQ,YAAcsB,EAAQ,OACxBN,EAAA,MAAM,KAAK,GAAGM,CAAO,CAAA"}