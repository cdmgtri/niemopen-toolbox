{"version":3,"file":"6HjxEEwp.js","sources":["../../../../node_modules/reka-ui/dist/RovingFocus/utils.js","../../../../node_modules/reka-ui/dist/RovingFocus/RovingFocusGroup.js","../../../../node_modules/reka-ui/dist/RovingFocus/RovingFocusItem.js","../../../../utils/niem/Entity.ts","../../../../utils/niem/Steward.ts","../../../../utils/niem/Model.ts","../../../../utils/niem/Version.ts","../../../../utils/niem/Namespace.ts","../../../../utils/niem/Component.ts","../../../../utils/niem/Type.ts","../../../../utils/niem/Property.ts","../../../../utils/niem/ChildProperty.ts","../../../../utils/Data.ts","../../../../utils/Search.ts","../../../../stores/useToolboxStore.ts"],"sourcesContent":["const ENTRY_FOCUS = \"rovingFocusGroup.onEntryFocus\";\nconst EVENT_OPTIONS = { bubbles: false, cancelable: true };\nconst MAP_KEY_TO_FOCUS_INTENT = {\n  ArrowLeft: \"prev\",\n  ArrowUp: \"prev\",\n  ArrowRight: \"next\",\n  ArrowDown: \"next\",\n  PageUp: \"first\",\n  Home: \"first\",\n  PageDown: \"last\",\n  End: \"last\"\n};\nfunction getDirectionAwareKey(key, dir) {\n  if (dir !== \"rtl\")\n    return key;\n  return key === \"ArrowLeft\" ? \"ArrowRight\" : key === \"ArrowRight\" ? \"ArrowLeft\" : key;\n}\nfunction getFocusIntent(event, orientation, dir) {\n  const key = getDirectionAwareKey(event.key, dir);\n  if (orientation === \"vertical\" && [\"ArrowLeft\", \"ArrowRight\"].includes(key))\n    return void 0;\n  if (orientation === \"horizontal\" && [\"ArrowUp\", \"ArrowDown\"].includes(key))\n    return void 0;\n  return MAP_KEY_TO_FOCUS_INTENT[key];\n}\nfunction focusFirst(candidates, preventScroll = false, rootNode) {\n  const PREVIOUSLY_FOCUSED_ELEMENT = rootNode?.activeElement ?? document.activeElement;\n  for (const candidate of candidates) {\n    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT)\n      return;\n    candidate.focus({ preventScroll });\n    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT)\n      return;\n  }\n}\nfunction wrapArray(array, startIndex) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\n\nexport { ENTRY_FOCUS as E, MAP_KEY_TO_FOCUS_INTENT as M, EVENT_OPTIONS as a, focusFirst as f, getFocusIntent as g, wrapArray as w };\n//# sourceMappingURL=utils.js.map\n","import { defineComponent, toRefs, ref, openBlock, createBlock, unref, withCtx, createVNode, renderSlot } from 'vue';\nimport { useVModel } from '@vueuse/core';\nimport { f as focusFirst, E as ENTRY_FOCUS, a as EVENT_OPTIONS } from './utils.js';\nimport { u as useCollection } from '../Collection/Collection.js';\nimport { u as useDirection } from '../shared/useDirection.js';\nimport { P as Primitive } from '../Primitive/Primitive.js';\nimport { c as createContext } from '../shared/createContext.js';\n\nconst [injectRovingFocusGroupContext, provideRovingFocusGroupContext] = createContext(\"RovingFocusGroup\");\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  __name: \"RovingFocusGroup\",\n  props: {\n    orientation: { default: void 0 },\n    dir: {},\n    loop: { type: Boolean, default: false },\n    currentTabStopId: {},\n    defaultCurrentTabStopId: {},\n    preventScrollOnEntryFocus: { type: Boolean, default: false },\n    asChild: { type: Boolean },\n    as: {}\n  },\n  emits: [\"entryFocus\", \"update:currentTabStopId\"],\n  setup(__props, { expose: __expose, emit: __emit }) {\n    const props = __props;\n    const emits = __emit;\n    const { loop, orientation, dir: propDir } = toRefs(props);\n    const dir = useDirection(propDir);\n    const currentTabStopId = useVModel(props, \"currentTabStopId\", emits, {\n      defaultValue: props.defaultCurrentTabStopId,\n      passive: props.currentTabStopId === void 0\n    });\n    const isTabbingBackOut = ref(false);\n    const isClickFocus = ref(false);\n    const focusableItemsCount = ref(0);\n    const { getItems, CollectionSlot } = useCollection({ isProvider: true });\n    function handleFocus(event) {\n      const isKeyboardFocus = !isClickFocus.value;\n      if (event.currentTarget && event.target === event.currentTarget && isKeyboardFocus && !isTabbingBackOut.value) {\n        const entryFocusEvent = new CustomEvent(ENTRY_FOCUS, EVENT_OPTIONS);\n        event.currentTarget.dispatchEvent(entryFocusEvent);\n        emits(\"entryFocus\", entryFocusEvent);\n        if (!entryFocusEvent.defaultPrevented) {\n          const items = getItems().map((i) => i.ref).filter((i) => i.dataset.disabled !== \"\");\n          const activeItem = items.find((item) => item.getAttribute(\"data-active\") === \"true\");\n          const currentItem = items.find(\n            (item) => item.id === currentTabStopId.value\n          );\n          const candidateItems = [activeItem, currentItem, ...items].filter(\n            Boolean\n          );\n          focusFirst(candidateItems, props.preventScrollOnEntryFocus);\n        }\n      }\n      isClickFocus.value = false;\n    }\n    function handleMouseUp() {\n      setTimeout(() => {\n        isClickFocus.value = false;\n      }, 1);\n    }\n    __expose({\n      getItems\n    });\n    provideRovingFocusGroupContext({\n      loop,\n      dir,\n      orientation,\n      currentTabStopId,\n      onItemFocus: (tabStopId) => {\n        currentTabStopId.value = tabStopId;\n      },\n      onItemShiftTab: () => {\n        isTabbingBackOut.value = true;\n      },\n      onFocusableItemAdd: () => {\n        focusableItemsCount.value++;\n      },\n      onFocusableItemRemove: () => {\n        focusableItemsCount.value--;\n      }\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(unref(CollectionSlot), null, {\n        default: withCtx(() => [\n          createVNode(unref(Primitive), {\n            tabindex: isTabbingBackOut.value || focusableItemsCount.value === 0 ? -1 : 0,\n            \"data-orientation\": unref(orientation),\n            as: _ctx.as,\n            \"as-child\": _ctx.asChild,\n            dir: unref(dir),\n            style: { \"outline\": \"none\" },\n            onMousedown: _cache[0] || (_cache[0] = ($event) => isClickFocus.value = true),\n            onMouseup: handleMouseUp,\n            onFocus: handleFocus,\n            onBlur: _cache[1] || (_cache[1] = ($event) => isTabbingBackOut.value = false)\n          }, {\n            default: withCtx(() => [\n              renderSlot(_ctx.$slots, \"default\")\n            ]),\n            _: 3\n          }, 8, [\"tabindex\", \"data-orientation\", \"as\", \"as-child\", \"dir\"])\n        ]),\n        _: 3\n      });\n    };\n  }\n});\n\nexport { _sfc_main as _, injectRovingFocusGroupContext as i };\n//# sourceMappingURL=RovingFocusGroup.js.map\n","import { defineComponent, computed, onMounted, onUnmounted, openBlock, createBlock, unref, withCtx, createVNode, renderSlot, nextTick } from 'vue';\nimport { g as getFocusIntent, w as wrapArray, f as focusFirst } from './utils.js';\nimport { u as useCollection } from '../Collection/Collection.js';\nimport { i as injectRovingFocusGroupContext } from './RovingFocusGroup.js';\nimport { u as useId } from '../shared/useId.js';\nimport { u as usePrimitiveElement } from '../Primitive/usePrimitiveElement.js';\nimport { P as Primitive } from '../Primitive/Primitive.js';\n\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  __name: \"RovingFocusItem\",\n  props: {\n    tabStopId: {},\n    focusable: { type: Boolean, default: true },\n    active: { type: Boolean, default: true },\n    allowShiftKey: { type: Boolean },\n    asChild: { type: Boolean },\n    as: { default: \"span\" }\n  },\n  setup(__props) {\n    const props = __props;\n    const context = injectRovingFocusGroupContext();\n    const id = computed(() => props.tabStopId || useId());\n    const isCurrentTabStop = computed(\n      () => context.currentTabStopId.value === id.value\n    );\n    const { getItems, CollectionItem } = useCollection();\n    const { primitiveElement, currentElement } = usePrimitiveElement();\n    const rootNode = computed(() => currentElement.value?.getRootNode());\n    onMounted(() => {\n      if (props.focusable)\n        context.onFocusableItemAdd();\n    });\n    onUnmounted(() => {\n      if (props.focusable)\n        context.onFocusableItemRemove();\n    });\n    function handleKeydown(event) {\n      if (event.key === \"Tab\" && event.shiftKey) {\n        context.onItemShiftTab();\n        return;\n      }\n      if (event.target !== event.currentTarget)\n        return;\n      const focusIntent = getFocusIntent(\n        event,\n        context.orientation.value,\n        context.dir.value\n      );\n      if (focusIntent !== void 0) {\n        if (event.metaKey || event.ctrlKey || event.altKey || (props.allowShiftKey ? false : event.shiftKey))\n          return;\n        event.preventDefault();\n        let candidateNodes = [...getItems().map((i) => i.ref).filter((i) => i.dataset.disabled !== \"\")];\n        if (focusIntent === \"last\") {\n          candidateNodes.reverse();\n        } else if (focusIntent === \"prev\" || focusIntent === \"next\") {\n          if (focusIntent === \"prev\")\n            candidateNodes.reverse();\n          const currentIndex = candidateNodes.indexOf(\n            event.currentTarget\n          );\n          candidateNodes = context.loop.value ? wrapArray(candidateNodes, currentIndex + 1) : candidateNodes.slice(currentIndex + 1);\n        }\n        nextTick(() => focusFirst(candidateNodes, false, rootNode.value));\n      }\n    }\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(unref(CollectionItem), null, {\n        default: withCtx(() => [\n          createVNode(unref(Primitive), {\n            ref_key: \"primitiveElement\",\n            ref: primitiveElement,\n            tabindex: isCurrentTabStop.value ? 0 : -1,\n            \"data-orientation\": unref(context).orientation.value,\n            \"data-active\": _ctx.active,\n            \"data-disabled\": !_ctx.focusable ? \"\" : void 0,\n            as: _ctx.as,\n            \"as-child\": _ctx.asChild,\n            onMousedown: _cache[0] || (_cache[0] = (event) => {\n              if (!_ctx.focusable) event.preventDefault();\n              else unref(context).onItemFocus(id.value);\n            }),\n            onFocus: _cache[1] || (_cache[1] = ($event) => unref(context).onItemFocus(id.value)),\n            onKeydown: handleKeydown\n          }, {\n            default: withCtx(() => [\n              renderSlot(_ctx.$slots, \"default\")\n            ]),\n            _: 3\n          }, 8, [\"tabindex\", \"data-orientation\", \"data-active\", \"data-disabled\", \"as\", \"as-child\"])\n        ]),\n        _: 3\n      });\n    };\n  }\n});\n\nexport { _sfc_main as _ };\n//# sourceMappingURL=RovingFocusItem.js.map\n","import { type BreadcrumbItem } from \"@nuxt/ui\";\nimport type { Serializer } from \"@vueuse/core\";\n\nexport type EntityTypeCode = \"Steward\" | \"Model\" | \"Version\" | \"Namespace\" | \"Property\" | \"Type\" | \"ChildProperty\" | \"Facet\" | \"LocalTerm\";\n\nexport abstract class Entity {\n\n  /**\n   * ID of item, unique across models and versions.\n   */\n  \"@id\"?: string;\n\n  \"@type\"?: EntityTypeCode;\n\n  category?: any;\n\n  localIdentifier?: string;\n\n  route?: string;\n\n  title?: string;\n\n  /**\n   * Edit mode of the item.\n   *\n   * - locked:   Reference item from the API or published local item that\n   *             cannot be modified.\n   * - subset:   Reference item from the API or published local item that\n   *             can have subset operations applied.\n   * - unlocked: Unpublished local item that can be modified.\n   */\n  editMode: \"locked\" | \"subset\" | \"unlocked\" = \"locked\";\n\n  /**\n   * True if the item should be expanded in the user interface; false\n   * if it should be collapsed.\n   */\n  expand = false;\n\n  /**\n   * Number of times this item has been pulled from local storage.\n   */\n  hits = 0;\n\n  /**\n   * True to disable opening the entity as an accordion item; false\n   * to allow it to be opened.\n   */\n  disabled = false;\n\n  private get childConstructor() {\n    return this.constructor as typeof Entity;\n  }\n\n  get apiRoute() {\n    return this.childConstructor.apiRoute(this.params);\n  }\n\n  get badgeVariant(): ColorVariantType | undefined {\n    return \"subtle\";\n  }\n\n  get breadcrumbs() {\n    return this.childConstructor.breadcrumbs(this.params);\n  }\n\n  /**\n   * Getter for `@id`\n   */\n  get id() {\n    return this[\"@id\"];\n  }\n\n  get labelQualifier(): string | undefined {\n    return undefined;\n  }\n\n  get params() {\n    return this.childConstructor.params(this.toAPI());\n  }\n\n  get to() {\n    return this.childConstructor.toolboxRoute(this.params);\n  }\n\n  get toolboxRoute(): string {\n    return this.childConstructor.toolboxRoute(this.params);\n  }\n\n  abstract get badgeLabel(): string | undefined;\n\n  abstract get badgeColor(): ColorType | undefined;\n\n  abstract get documentation() : string | undefined;\n\n  abstract get icon(): IconType;\n\n  abstract get infoItems(): InfoItem[];\n\n  abstract get label(): string;\n\n  abstract get page(): AppLinkType;\n\n  abstract get tabsItems(): ToolboxTabsItem[];\n\n  protected static addInfoItem(infoItems: InfoItem[], field: string, value: string | undefined, format?: InfoItemFormat, link?: string, badgeColor?: ColorType, badgeVariant?: ColorVariantType) {\n    if (value) {\n      infoItems.push({ field, value, format, link, badgeColor, badgeVariant });\n    }\n  }\n\n  toAPI<T extends APIEntity>() {\n    return Object.assign({} as T, this);\n  }\n\n  static badgeColor(arg: any): ColorType {\n    return \"neutral\";\n  }\n\n  static badgeVariant(arg: any): ColorVariantType {\n    return \"subtle\";\n  }\n\n  static fromAPI<T extends Entity>(entity: T, apiData: APIEntity) {\n    return (Object.assign(entity, apiData)) as T;\n  }\n\n  static apiRoute(params: any): string {\n    throw new Error(\"Method not implemented\");\n  }\n\n  static breadcrumbs(params: any): BreadcrumbItem[] {\n    throw new Error(\"Method not implemented\");\n  }\n\n  static id(...args: any[]): string {\n    throw new Error(\"Method not implemented\");\n  }\n\n  static idFromParams(EntityClass: typeof Entity, params: any) {\n    return EntityClass.toolboxRoute(params).replace(\"/browse/\", \"\");\n  }\n\n  static init(): Entity {\n    throw new Error(\"Method not implemented\");\n  }\n\n  /**\n   * @param apiEntity - API Entity or Entity ID\n   */\n  static params(apiEntity: APIEntity | string): Object {\n    throw new Error(\"Method not implemented\");\n  }\n\n  static serializeEntity<T extends Entity>(initializer: () => T): Serializer<T> {\n    return {\n      read: (raw: string) => Object.assign(initializer(), raw),\n      write: (value: T) => JSON.stringify(value)\n    }\n  }\n\n  static serializeEntityList<T extends Entity>(initializer: () => T): Serializer<T[]> {\n    return {\n      read: (raw: string) => {\n        let objects = JSON.parse(raw) as T[];\n        return objects.map(object => Object.assign(initializer(), object));\n      },\n      write: (value: T[]) => JSON.stringify(value)\n    }\n  }\n\n  static toolboxRoute(params: any): string {\n    throw new Error(\"Method not implemented\");\n  }\n\n  static toRef(entity: Entity): Object {\n    throw new Error(\"Method not implemented\");\n  }\n\n  static toAPI(): APIEntity {\n    throw new Error(\"Method not implemented\");\n  }\n\n  static fromCMF() {\n    throw new Error(\"Method not implemented\");\n  }\n\n  static toCMF() {\n    throw new Error(\"Method not implemented\");\n  }\n\n  static sort(a: Entity, b:Entity): number {\n    throw new Error(\"Method not implemented\");\n  }\n\n}\n","import type { BreadcrumbItem, TabsItem } from \"@nuxt/ui\";\nimport { Entity, type EntityTypeCode } from \"./Entity\"\n\nexport class Steward extends Entity {\n\n  override \"@type\": EntityTypeCode = \"Steward\";\n\n  override category?: APIStewardCategory;\n\n  address?: string;\n  contactName?: string;\n  country?: string;\n  description?: string;\n  email?: string;\n  fullName?: string;\n  phone?: string;\n  shortName?: string;\n  stewardKey?: string;\n  subunit?: string;\n  unit?: string;\n  website?: string;\n\n  modelsLoaded = false;\n  modelsCount: number | undefined;\n\n  namespacesLoaded = false;\n\n  static readonly NIEMStewardKey = \"niem\";\n\n  constructor(shortName?: string, fullName?: string, category?: APIStewardCategory) {\n    super();\n    this.shortName = shortName;\n    this.fullName = fullName;\n    this.category = category;\n  }\n\n  override get apiRoute() {\n    return Steward.apiRoute(this.params);\n  }\n\n  override get badgeLabel() {\n    let label = \"\";\n\n    // TODO-API: Update NIEM steward to remove country\n    label += this.stewardKey == \"niem\" ? \"\" : this.country;\n    label += label.length > 0 && this.category ? \" | \" : \"\";\n    label += this.category;\n\n    return label;\n  }\n\n  override get badgeColor(): ColorType {\n    return \"neutral\";\n  }\n\n  override get breadcrumbs() {\n    return Steward.breadcrumbs(this.params);\n  }\n\n  override get documentation() {\n    return this.description;\n  }\n\n  override get icon() {\n    return icons.steward;\n  }\n\n  override get infoItems() {\n    let items: InfoItem[] = [];\n\n    let unit = this.unit + (this.unit && this.subunit ? \" | \" : \"\") + this.subunit;\n\n    Entity.addInfoItem(items, \"Full name\", this.fullName);\n    Entity.addInfoItem(items, \"Unit\", unit);\n    Entity.addInfoItem(items, \"Description\", this.description);\n    Entity.addInfoItem(items, \"Category\", this.category);\n    Entity.addInfoItem(items, \"Contact\", this.contactName);\n    Entity.addInfoItem(items, \"Address\", this.address);\n    Entity.addInfoItem(items, \"Country\", this.country);\n    Entity.addInfoItem(items, \"Website\", this.website, \"link\");\n    Entity.addInfoItem(items, \"Email\", this.email, \"email\");\n    Entity.addInfoItem(items, \"Phone\", this.phone);\n\n    return items;\n  }\n\n  override get label() {\n    return this.shortName || \"undefined\";\n  }\n\n  override get page() {\n    return AppItems.steward;\n  }\n\n  override get params() {\n    return super.params as APIStewardParams;\n  }\n\n  override get tabsItems(): ToolboxTabsItem[] {\n    return [\n      {\n        icon: icons.model,\n        label: \"Models\",\n        slot: \"models\",\n        count: this.modelsCount\n      },\n      {\n        icon: icons.namespace,\n        label: \"Namespaces\",\n        slot: \"namespaces\"\n      }\n    ];\n  }\n\n  override get toolboxRoute() {\n    return Steward.toolboxRoute(this.params);\n  }\n\n  static override apiRoute(params?: APIStewardParams) {\n    let route = Config.baseURL + \"stewards\";\n    if (params) {\n      route += `/${params.stewardKey}`;\n    }\n    return route;\n  }\n\n  static override breadcrumbs(params: APIStewardParams): BreadcrumbItem[] {\n    return [\n      {\n        to: \"/\",\n        label: \"Home\"\n      },\n      {\n        to: \"/browse\",\n        label: \"Browse\"\n      },\n      {\n        label: params.stewardKey\n      }\n    ]\n  }\n\n  static override id(stewardKey: string | undefined) {\n    return stewardKey || \"\";\n  }\n\n  static override init() {\n    return new Steward();\n  }\n\n  static override params(steward: APISteward | string): APIStewardParams {\n    if (typeof steward == \"string\") {\n      return {\n        stewardKey: steward\n      }\n    }\n    return {\n      stewardKey: steward.stewardKey\n    }\n  }\n\n  /**\n   * Sort by NIEM first, then short name.\n   */\n  static override sort(a: Steward, b: Steward): number {\n    if (b.stewardKey == \"niem\") {\n      return 1;\n    }\n    return a.stewardKey?.localeCompare(b.stewardKey || \"\") || 0;\n  }\n\n  static override toolboxRoute(params: APIStewardParams) {\n    return `/browse/${params.stewardKey}`;\n  }\n\n  static override toRef(entity: Steward): APIStewardRef {\n    return {\n      route: entity.route,\n      stewardKey: entity.stewardKey as string,\n      shortName: entity.shortName\n    }\n  }\n\n}\n","import type { BreadcrumbItem, TabsItem } from \"@nuxt/ui\";\nimport { Entity, type EntityTypeCode } from \"./Entity\";\nimport { Steward } from \"./Steward\";\nimport { Version } from \"./Version\";\nimport type { Serializer } from \"@vueuse/core\";\nimport { ToolboxApp } from \"../ToolboxApp\";\nimport type { Reactive } from \"vue\";\n\nexport class Model extends Entity {\n\n  override \"@type\": EntityTypeCode = \"Model\";\n\n  override category?: APIModelCategory;\n\n  description?: string;\n  developer?: string;\n  fullName?: string;\n  keywords?: string;\n  modelKey?: string;\n  objective?: string;\n  purpose?: string;\n  repo?: string;\n  shortName?: string;\n  steward?: APIStewardRef;\n  subjects?: string;\n  website?: string;\n\n  versionsLoaded = false;\n  versionsCount: number | undefined;\n\n  static readonly NIEMModelKey = \"model\";\n\n  static readonly NIEMModelParams: APIModelParams = {\n    stewardKey: Steward.NIEMStewardKey,\n    modelKey: Model.NIEMModelKey\n  }\n\n  constructor(steward?: Steward, shortName?: string, fullName?: string, category?: APIModelCategory) {\n    super();\n    this.shortName = shortName;\n    this.fullName = fullName;\n    this.category = category;\n\n    if (steward) {\n      this.steward = Steward.toRef(steward);\n    }\n  }\n\n  static get NIEMModelID() {\n    return Model.id(Steward.NIEMStewardKey, this.NIEMModelKey);\n  }\n\n  override get badgeLabel() {\n    return this.category;\n  }\n\n  override get badgeColor(): ColorType  {\n    return this.category == \"other\" ? \"neutral\" : \"primary\";\n  }\n\n  override get badgeVariant(): ColorVariantType {\n    return this.category == \"reference\" ? \"solid\" : \"subtle\";\n  }\n\n  override get documentation() {\n    return this.description;\n  }\n\n  override get icon() {\n    return icons.model;\n  }\n\n  override get infoItems() {\n    let items: InfoItem[] = [];\n\n    Entity.addInfoItem(items, \"Full name\", this.fullName);\n    Entity.addInfoItem(items, \"Description\", this.description);\n    Entity.addInfoItem(items, \"Category\", this.category);\n    Entity.addInfoItem(items, \"Website\", this.website, \"link\");\n    Entity.addInfoItem(items, \"Repo\", this.repo, \"link\");\n    Entity.addInfoItem(items, \"Developer\", this.developer);\n    Entity.addInfoItem(items, \"Keywords\", this.keywords);\n    Entity.addInfoItem(items, \"Objective\", this.objective);\n    Entity.addInfoItem(items, \"Purpose\", this.purpose);\n    Entity.addInfoItem(items, \"Subjects\", this.subjects);\n\n    return items;\n  }\n\n  override get label() {\n    return this.shortName || \"undefined\";\n  }\n\n  override get labelQualifier() {\n    return this.steward?.shortName;\n  }\n\n  override get page() {\n    return AppItems.model;\n  }\n\n  override get params() {\n    return super.params as APIModelParams;\n  }\n\n  override get tabsItems(): ToolboxTabsItem[] {\n    return [\n      {\n        icon: icons.version,\n        label: \"Versions\",\n        slot: \"versions\",\n        count: this.versionsCount\n      }\n    ]\n  }\n\n  static override apiRoute(params: APIStewardParams | APIModelParams) {\n    let route = Steward.apiRoute(params) + \"/models\";\n    if (\"modelKey\" in params) {\n      route += `/${params.modelKey}`;\n    }\n    return route;\n  }\n\n  static override breadcrumbs(params: APIModelParams): BreadcrumbItem[] {\n    let breadcrumbs = Steward.breadcrumbs(params).slice(0, -1);\n    breadcrumbs.push(...[\n      {\n        to: Steward.toolboxRoute(params),\n        label: params.stewardKey\n      },\n      {\n        label: params.modelKey\n      }\n    ]);\n    return breadcrumbs;\n  }\n\n  static override id(stewardID: string, modelKey: string) {\n    return `${stewardID}/${modelKey}`;\n  }\n\n  static override init() {\n    return new Model();\n  }\n\n  static override params(model: APIModel | string): APIModelParams {\n    if (typeof model == \"string\") {\n      let [stewardKey, modelKey] = model.split(\"/\");\n      return {\n        stewardKey: stewardKey,\n        modelKey: modelKey\n      }\n    }\n    return {\n      stewardKey: model.steward.stewardKey,\n      modelKey: model.modelKey\n    }\n  }\n\n  /**\n   * Sort by:\n   * 1. NIEM reference model\n   * 2. Model short name\n   * 3. Steward short name\n   */\n  static override sort(a: Model, b: Model) {\n    // Check that sort fields exist\n    if (!a.steward?.stewardKey || !a.steward.shortName || !b.steward?.stewardKey || !b.steward.shortName || !a.shortName || !b.shortName) {\n      return 0;\n    }\n\n    // Return the NIEM reference model first\n    if (a.steward.stewardKey == Steward.NIEMStewardKey && a.modelKey == Model.NIEMModelKey) {\n      return -1;\n    }\n\n    // If model short names match, sort by steward short name\n    if (a.shortName == b.shortName) {\n      return a.steward.shortName.localeCompare(b.steward.shortName || \"\");\n    }\n\n    // Sort by model short name\n    return a.shortName.localeCompare(b.shortName);\n  }\n\n  static override toolboxRoute(params: APIModelParams) {\n    return Steward.toolboxRoute(params) + \"/\" + params.modelKey;\n  }\n\n  static override toRef(entity: Model): APIModelRef {\n    return {\n      route: entity.route,\n      modelKey: entity.modelKey as string,\n      shortName: entity.shortName\n    }\n  }\n\n  static readonly serializer: Serializer<Model> = {\n    read: (raw: string) => Object.assign(new Model(), JSON.parse(raw)),\n    write: (value: Model) => JSON.stringify(value)\n  }\n\n}\n","import { Entity, type EntityTypeCode } from \"./Entity\";\nimport { Model } from \"./Model\";\nimport { Steward } from \"./Steward\";\nimport { ToolboxApp } from \"../ToolboxApp\";\n\nexport class Version extends Entity {\n\n  override \"@type\": EntityTypeCode = \"Version\";\n\n  override category?: APIVersionCategoryType;\n\n  conformanceTargets?: string;\n  draft?: string;\n  exchangePartners?: string;\n  exchangePattern?: string;\n  isCurrent?: boolean;\n  isPublished?: boolean;\n  model?: APIModelRef;\n  niemVersionNumber?: string;\n  revised?: string;\n  status?: string;\n  steward?: APIStewardRef;\n  uri?: string;\n  versionNumber?: string;\n\n  namespacesLoaded = false;\n  namespacesCount: number | undefined;\n\n  propertiesLoaded = false;\n  propertiesCount: number | undefined;\n\n  typesLoaded = false;\n  typesCount: number | undefined;\n\n  override disabled = true;\n\n  // LATER: Simple NIEM rendering options\n  /**\n   * Rendering options for simplified NIEM message format schemas\n   */\n  simpleOptions = {\n    inlineSubstitutions: false,\n    flattenInheritance: false,\n    flattenDatatypes: false,\n    useAliases: false,\n    defaultMin: \"0\",\n    defaultMax: \"unbounded\",\n    defaultAttributeUse: \"optional\",\n    removePrefixes: false\n  }\n\n  constructor(model?: Model, versionNumber?: string, niemVersionNumber?: string, category?: APIVersionCategoryType) {\n    super();\n    this.versionNumber = versionNumber;\n    this.niemVersionNumber = niemVersionNumber;\n    this.category = category;\n\n    if (model) {\n      this.model = Model.toRef(model);\n      if (model.steward) {\n        this.steward = model.steward;\n      }\n    }\n  }\n\n  override get badgeLabel() {\n    let separator = \" | \";\n    if (this.isCurrent) return ToolboxApp.join(separator, this.category, \"current\");\n    if (!this.isPublished) return ToolboxApp.join(separator, this.category, \"draft\");\n    return this.category;\n  }\n\n  override get badgeColor(): ColorType {\n    if (this.isCurrent) return \"success\";\n    if (!this.isPublished) return \"warning\";\n    return \"neutral\";\n  }\n\n  override get documentation() {\n    // TODO-API: Version description\n    return undefined;\n  }\n\n  override get icon() {\n    return icons.version;\n  }\n\n  override get infoItems() {\n    let items: InfoItem[] = [];\n\n    Entity.addInfoItem(items, \"Version Number\", this.versionNumber);\n\n    Entity.addInfoItem(items, \"Category\", this.category);\n    Entity.addInfoItem(items, \"Conformance targets\", this.conformanceTargets);\n    Entity.addInfoItem(items, \"Draft\", this.draft);\n    Entity.addInfoItem(items, \"Exchange partners\", this.exchangePartners);\n    Entity.addInfoItem(items, \"Exchange pattern\", this.exchangePattern);\n    Entity.addInfoItem(items, \"Is current?\", this.isCurrent + \"\");\n    Entity.addInfoItem(items, \"Is published?\", this.isPublished + \"\");\n    Entity.addInfoItem(items, \"NIEM version number\", this.niemVersionNumber);\n    Entity.addInfoItem(items, \"Revised date\", this.revised);\n    Entity.addInfoItem(items, \"Status\", this.status);\n    Entity.addInfoItem(items, \"URI\", this.uri, \"link\");\n\n    return items;\n  }\n\n  override get label() {\n    return this.versionNumber || \"undefined\";\n  }\n\n  override get page() {\n    return AppItems.version;\n  }\n\n  override get params() {\n    return super.params as APIVersionParams;\n  }\n\n  override get tabsItems(): ToolboxTabsItem[] {\n    return [\n      {\n        icon: icons.namespace,\n        label: \"Namespaces\",\n        slot: \"namespaces\",\n        count: this.namespacesCount\n      },\n      {\n        icon: icons.property,\n        label: \"Properties\",\n        slot: \"properties\",\n        count: this.propertiesCount,\n        more: !this.propertiesLoaded\n      },\n      {\n        icon: icons.type,\n        label: \"Types\",\n        slot: \"types\",\n        count: this.typesCount,\n        more: !this.typesLoaded\n      }\n    ];\n  }\n\n  static override apiRoute(params: APIModelParams | APIVersionParams) {\n    let route = `${Model.apiRoute(params)}/versions`;\n    if (\"versionNumber\" in params) {\n      return `${route}/${params.versionNumber}`;\n    }\n    return route;\n  }\n\n  static override breadcrumbs(params: APIVersionParams) {\n    let breadcrumbs = Model.breadcrumbs(params).slice(0, -1);\n    breadcrumbs.push(...[\n      {\n        to: Model.toolboxRoute(params),\n        label: params.modelKey\n      },\n      {\n        label: params.versionNumber\n      }\n    ]);\n    return breadcrumbs;\n  }\n\n  static override id(modelID: string, versionNumber: string) {\n    return `${modelID}/${versionNumber}`;\n  }\n\n  static override init() {\n    return new Version();\n  }\n\n  static override params(version: APIVersion | string): APIVersionParams {\n    if (typeof version == \"string\") {\n      let [stewardKey, modelKey, versionNumber] = version.split(\"/\");\n      return {\n        stewardKey,\n        modelKey,\n        versionNumber\n      }\n    }\n    return {\n      stewardKey: version.steward.stewardKey,\n      modelKey: version.model.modelKey,\n      versionNumber: version.versionNumber\n    }\n  }\n\n  /**\n   * Sort by version number descending.\n   */\n  static override sort(a: Version, b:Version) {\n    if (!a.versionNumber || !b.versionNumber) {\n      return 0;\n    }\n    return b.versionNumber.localeCompare(a.versionNumber);\n  }\n\n  static override toolboxRoute(params: APIVersionParams) {\n    return Model.toolboxRoute(params) + \"/\" + params.versionNumber;\n  }\n\n  static override toRef(entity: Version): APIVersionRef {\n    return {\n      route: entity.route,\n      versionNumber: entity.versionNumber as string,\n      niemVersionNumber: entity.niemVersionNumber\n    }\n  }\n\n  // TODO-API: Move category information to API\n  static category(version: Version): APIVersionCategoryType | undefined {\n    if (version.steward?.stewardKey == Steward.NIEMStewardKey && version.model?.modelKey == Model.NIEMModelKey) {\n      return version.versionNumber?.endsWith(\"0\") ? \"major\" : \"minor\";\n    }\n  }\n\n}\n","import type { BreadcrumbItem } from \"@nuxt/ui\";\nimport { Entity, type EntityTypeCode } from \"./Entity\";\nimport { Version } from \"./Version\";\n\nexport class Namespace extends Entity {\n\n  override \"@type\": EntityTypeCode = \"Namespace\";\n\n  override category?: APINamespaceCategory = undefined;\n\n  prefix?: string;\n  name?: string;\n  uri?: string;\n  definition?: string;\n  draft?: string;\n  target?: \"REF\" | \"EXT\";\n  generation?: \"build\" | \"static_file\" | \"none\";\n  filename?: string;\n  filepath?: string;\n  conformanceTarget?: string;\n  isOriginal?: boolean;\n  isDeprecated?: boolean;\n  hasTarget?: boolean; // TODO: Review hasTarget\n  steward?: APIStewardRef;\n  model?: APIModelRef;\n  version?: APIVersionRef;\n\n  propertiesLoaded = false;\n  typesLoaded = false;\n  localTermsLoaded = false;\n\n  propertiesCount: number | undefined = undefined;\n  typesCount: number | undefined = undefined;\n  localTermsCount: number | undefined = undefined;\n\n  override get badgeLabel() {\n    return this.category;\n  }\n\n  override get badgeColor(): ColorType {\n    return \"neutral\";\n  }\n\n  override get documentation() {\n    return this.definition;\n  }\n\n  override get icon() {\n    return icons.namespace;\n  }\n\n  override get infoItems(): InfoItem[] {\n    let items: InfoItem[] = [];\n\n    Entity.addInfoItem(items, \"Prefix\", this.prefix);\n    Entity.addInfoItem(items, \"Name\", this.name);\n    Entity.addInfoItem(items, \"URI\", this.uri, \"link\");\n    Entity.addInfoItem(items, \"Definition\", this.definition);\n    Entity.addInfoItem(items, \"Category\", this.category);\n    Entity.addInfoItem(items, \"Draft\", this.draft);\n    Entity.addInfoItem(items, \"Target\", this.target);\n    Entity.addInfoItem(items, \"Generation\", this.generation);\n    Entity.addInfoItem(items, \"Filename\", this.filename);\n    Entity.addInfoItem(items, \"Filepath\", this.filepath);\n    Entity.addInfoItem(items, \"Conformance target\", this.conformanceTarget, \"link\");\n    Entity.addInfoItem(items, \"Deprecated?\", this.isDeprecated + \"\");\n\n    return items;\n  }\n\n  override get label() {\n    return this.prefix || \"undefined\";\n  }\n\n  override get labelQualifier() {\n    if (this.name) return this.name;\n  }\n\n  override get page() {\n    return AppItems.namespace;\n  }\n\n  override get params() {\n    return super.params as APINamespaceParams;\n  }\n\n  override get tabsItems(): ToolboxTabsItem[] {\n    return [\n      {\n        icon: icons.property,\n        label: \"Properties\",\n        slot: \"properties\",\n        count: this.propertiesCount,\n        more: !this.propertiesLoaded\n      },\n      {\n        icon: icons.type,\n        label: \"Types\",\n        slot: \"types\",\n        count: this.typesCount,\n        more: !this.typesLoaded\n      },\n      {\n        icon: icons.term,\n        label: \"Local terms\",\n        slot: \"terms\"\n      }\n    ];\n  }\n\n  static override apiRoute(params: APIVersionParams | APINamespaceParams) {\n    let route = Version.apiRoute(params) + \"/namespaces\";\n    if (\"prefix\" in params) {\n      route += \"/\" + params.prefix;\n    }\n    return route;\n  }\n\n  static override breadcrumbs(params: APINamespaceParams): BreadcrumbItem[] {\n    let breadcrumbs = Version.breadcrumbs(params).slice(0, -1);\n    breadcrumbs.push(...[\n      {\n        to: Version.toolboxRoute(params),\n        label: params.versionNumber\n      },\n      {\n        label: params.prefix\n      }\n    ])\n    return breadcrumbs;\n  }\n\n  static override id(versionID: string, prefix: string) {\n    return `${versionID}/${prefix}`;\n  }\n\n  static override init() {\n    return new Namespace();\n  }\n\n  static override params(namespace: APINamespace | string): APINamespaceParams {\n    if (typeof namespace == \"string\") {\n      let [stewardKey, modelKey, versionNumber, prefix] = namespace.split(\"/\");\n      return {\n        stewardKey,\n        modelKey,\n        versionNumber,\n        prefix\n      }\n    }\n    return {\n      stewardKey: namespace.steward.stewardKey,\n      modelKey: namespace.model.modelKey,\n      versionNumber: namespace.version.versionNumber,\n      prefix: namespace.prefix\n    }\n  }\n\n  static override sort(a: Namespace, b: Namespace) {\n    if (!a.prefix || !b.prefix) {\n      return 0;\n    }\n    return a.prefix.localeCompare(b.prefix);\n  }\n\n  static override toolboxRoute(params: APINamespaceParams) {\n    return Version.toolboxRoute(params) + \"/\" + params.prefix;\n  }\n\n\n  private static readonly CATEGORY_SORT_ORDER: APINamespaceCategory[] = [\"core\", \"core_supplement\", \"domain\", \"domain_update\", \"exchange\", \"extension\", \"code\", \"adapter\", \"auxiliary\", \"built_in\", \"external\", \"other\", \"utility\"]\n\n  static sortCategories(a: APINamespaceCategory, b: APINamespaceCategory) {\n    return Namespace.CATEGORY_SORT_ORDER.indexOf(a) - Namespace.CATEGORY_SORT_ORDER.indexOf(b);\n  }\n\n  static sortByCategoryName(a: { category: APINamespaceCategory, name: string }, b: { category: APINamespaceCategory, name: string }) {\n    if (a.category != b.category) {\n      return Namespace.CATEGORY_SORT_ORDER.indexOf(a.category) - Namespace.CATEGORY_SORT_ORDER.indexOf(b.category);\n    }\n    return a.name.localeCompare(b.name);\n  }\n\n  static sortByCategoryPrefix(a: { category: APINamespaceCategory, prefix: string }, b: { category: APINamespaceCategory, prefix: string }) {\n    if (a.category != b.category) {\n      return Namespace.CATEGORY_SORT_ORDER.indexOf(a.category) - Namespace.CATEGORY_SORT_ORDER.indexOf(b.category);\n    }\n    return a.prefix.localeCompare(b.prefix);\n  }\n\n}\n","import type { BreadcrumbItem } from \"@nuxt/ui\";\nimport { Entity } from \"./Entity\";\nimport { Version } from \"./Version\";\nimport { Namespace } from \"./Namespace\";\n\nexport abstract class Component extends Entity {\n\n  override category?: APIPropertyCategory | APITypeCategory = undefined;\n\n  prefix?: string;\n  qname?: string;\n  name?: string;\n  definition?: string;\n  terms?: string[];\n  isOriginal?: boolean;\n  isDeprecated?: boolean;\n\n  steward?: APIStewardRef;\n  model?: APIModelRef;\n  version?: APIVersionRef;\n  namespace?: APINamespaceRef;\n\n  contentsCount?: number;\n  contentsLoaded?: boolean;\n\n  usagesCount?: number;\n  usagesLoaded?: boolean;\n\n  override get badgeColor(): ColorType {\n    return \"neutral\";\n  }\n\n  override get documentation() {\n    return this.definition;\n  }\n\n  override get label() {\n    return this.qname || \"undefined\";\n  }\n\n  override get params() {\n    return super.params as APIComponentParams;\n  }\n\n  static override breadcrumbs(params: APIComponentParams): BreadcrumbItem[] {\n    params.prefix = params.qname.split(\":\")[0];\n    params.name = params.qname.split(\":\")[1];\n\n    let breadcrumbs = Namespace.breadcrumbs(params as APINamespaceParams).slice(0, -1);\n    breadcrumbs.push(...[\n      {\n        to: Namespace.toolboxRoute(params as APINamespaceParams),\n        label: params.prefix\n      },\n      {\n        label: params.name\n      }\n    ]);\n    return breadcrumbs;\n  }\n\n  static override id(versionID: string, qname: string) {\n    return `${versionID}/${qname}`;\n  }\n\n  override get infoItems(): InfoItem[] {\n    let items: InfoItem[] = [];\n\n    Entity.addInfoItem(items, \"QName\", this.qname);\n    Entity.addInfoItem(items, \"Definition\", this.definition);\n    Entity.addInfoItem(items, \"Terms\", this.terms?.join(\", \"));\n\n    if (this.isDeprecated) {\n      Entity.addInfoItem(items, \"Deprecated?\", this.isDeprecated + \"\");\n    }\n\n    return items;\n  }\n\n  static override params(component: APIProperty | APIType | string): APIComponentParams {\n    if (typeof component == \"string\") {\n      let [stewardKey, modelKey, versionNumber, qname] = component.split(\"/\");\n      return {\n        stewardKey,\n        modelKey,\n        versionNumber,\n        qname\n      }\n    }\n    return {\n      stewardKey: component.steward.stewardKey,\n      modelKey: component.model.modelKey,\n      versionNumber: component.version.versionNumber,\n      qname: component.qname\n    }\n  }\n\n  static override sort(a: Component, b: Component): number {\n    if (!a.qname || !b.qname) return 0;\n    return a.qname.localeCompare(b.qname);\n  }\n\n  static override toolboxRoute(params: APIComponentParams) {\n    return Version.toolboxRoute(params) + \"/\" + params.qname;\n  }\n\n  static terms(qname: string) {\n    return qname\n\n      // Replace dashes and underscores with spaces\n      .replaceAll(\"_\", \" \")\n      .replaceAll(\"-\", \" \")\n\n      // Add a space after any non-digit that precedes a digit\n      .replace(/(\\D+)(\\d+)/g, \"$1 $2\")\n\n      // Add a space before an upper case letter following a lower case letter\n      .replace(/([a-z]+)([A-Z]+)/g, \" \")\n\n      .split(\" \");\n  }\n\n}\n","import { Component } from \"./Component\";\nimport { Entity, type EntityTypeCode } from \"./Entity\";\nimport { Version } from \"./Version\";\n\nexport type TypeBaseCategory = \"class\" | \"value\" | \"datatype\";\n\nexport type ClassPattern = \"class\" | \"association\" | \"augmentation\" | \"adapter\";\n\nexport type DatatypePattern = \"atomic\" | \"list\" | \"union\";\n\nexport type TypePattern = ClassPattern | DatatypePattern | \"literal object\";\n\nexport class Type extends Component {\n\n  override \"@type\": EntityTypeCode = \"Type\";\n  override category?: APITypeCategory = undefined;\n  derivation?: APITypeDerivation;\n  pattern?: APITypePattern;\n  isSimple?: boolean;\n  isComplexContent?: boolean;\n  isSimpleContent?: boolean;\n  base?: APITypeRef | null;\n\n  override get badgeColor(): ColorType {\n    return Type.badgeColor(this.category);\n  }\n\n  override get badgeLabel(): TypeBaseCategory | undefined {\n    return Type.badgeLabel(this.category);\n  }\n\n  override get badgeVariant(): ColorVariantType {\n    return Type.badgeVariant(this.category);\n  }\n\n  override get icon() {\n    if (this.category == \"complex_value\" || this.category == \"simple_value\") {\n      return icons.datatype;\n    }\n    return icons.class;\n  }\n\n  override get infoItems() {\n    let items = super.infoItems;\n\n    let trailingItems = items.slice(2);\n    items = items.slice(0, 2);\n\n    if (this.base?.qname) {\n      let baseParams = this.params;\n      baseParams.qname = this.base.qname;\n      Entity.addInfoItem(items, \"Base\", this.base?.qname, \"route\", Type.toolboxRoute(baseParams));\n    }\n\n    Entity.addInfoItem(items, \"Category\", this.badgeLabel, undefined, undefined, this.badgeColor, this.badgeVariant);\n\n    Entity.addInfoItem(items, \"Derivation\", this.derivation);\n    Entity.addInfoItem(items, \"Pattern\", this.pattern);\n\n    return [...items, ...trailingItems];\n  }\n\n  override get page() {\n    return AppItems.type;\n  }\n\n  override get tabsItems(): ToolboxTabsItem[] {\n    return [\n      {\n        icon: icons.childProperty,\n        label: \"Contents\",\n        slot: \"contents\",\n        count: this.contentsCount\n      },\n      {\n        icon: icons.checklist,\n        label: \"Usages\",\n        slot: \"usages\",\n        count: this.usagesCount\n      }\n    ];\n  }\n\n  static override apiRoute(params: APINamespaceParams | APIComponentParams) {\n    let route = Version.apiRoute(params);\n    if (\"qname\" in params) {\n      route += `/types/${params.qname}`;\n    }\n    else {\n      route += `/namespaces/${params.prefix}/types`;\n    }\n    return route;\n  }\n\n  static override badgeColor(category: APITypeCategory): ColorType {\n    return category == \"simple_value\" ? \"neutral\" : \"primary\";\n  }\n\n  static override badgeVariant(category: APITypeCategory): ColorVariantType {\n    return category == \"complex_object\" ? \"solid\" : \"subtle\";\n  }\n\n  static badgeLabel(category: APITypeCategory): TypeBaseCategory | undefined {\n    switch (category) {\n      case \"complex_object\": return \"class\";\n      case \"complex_value\": return \"value\";\n      case \"simple_value\": return \"datatype\";\n    }\n  }\n\n  static override init() {\n    return new Type();\n  }\n\n}\n","import { Component } from \"./Component\";\nimport { Entity, type EntityTypeCode } from \"./Entity\";\nimport { Type } from \"./Type\";\nimport { Version } from \"./Version\";\n\nexport type PropertyBaseCategory = \"object\" | \"data\" | \"abstract\" | \"attribute\" | \"value\";\n\nexport type PropertyDataPattern = \"text\" | \"number\" | \"id\" | \"date\" | \"value\";\n\nexport type PropertyObjectPattern = \"object\" | \"association\" | \"adapter\" | \"augmentation\";\n\nexport type PropertyPattern = PropertyDataPattern | PropertyObjectPattern;\n\n\nexport class Property extends Component {\n\n  override \"@type\": EntityTypeCode = \"Property\";\n  override category?: APIPropertyCategory = undefined;\n  alias?: string;\n  keywords?: string;\n  exampleContent?: string;\n  usageInfo?: string;\n  type?: APITypeRef;\n  group?: APIPropertyRef;\n\n  static readonly PROPERTY_DATA_REPRESENTATION_TERMS = [\"Amount\", \"BinaryObject\", \"Graphic\", \"Picture\", \"Sound\", \"Video\", \"Code\", \"DateTime\", \"Date\", \"Time\", \"Duration\", \"ID\", \"URI\", \"Indicator\", \"Measure\", \"Numeric\", \"Value\", \"Rate\", \"Percent\", \"Quantity\", \"Text\", \"Name\", \"List\"];\n\n  override get badgeColor(): ColorType {\n    return Property.badgeColor(this.category);\n  }\n\n  override get badgeLabel(): PropertyBaseCategory | undefined {\n    return Property.badgeLabel(this.category, this.type?.category);\n  }\n\n  override get badgeVariant(): ColorVariantType {\n    return Property.badgeVariant(this.category);\n  }\n\n  override get icon() {\n    return icons.property;\n  }\n\n  override get infoItems() {\n    let items = super.infoItems;\n\n    let trailingItems = items.slice(2);\n    items = items.slice(0, 2);\n\n    let typeParams = this.params;\n    typeParams.qname = this.type?.qname || \"\";\n\n    Entity.addInfoItem(items, \"Type\", this.type?.qname, \"route\", Type.toolboxRoute(typeParams));\n\n    Entity.addInfoItem(items, \"Category\", this.badgeLabel, undefined, undefined, Property.badgeColor(this.category), Property.badgeVariant(this.category));\n\n    Entity.addInfoItem(items, \"Group\", this.group?.qname);\n\n    Entity.addInfoItem(items, \"Alias\", this.alias);\n    Entity.addInfoItem(items, \"Keywords\", this.keywords);\n    Entity.addInfoItem(items, \"Example content\", this.exampleContent);\n    Entity.addInfoItem(items, \"Usage info\", this.usageInfo);\n\n    return [...items, ...trailingItems];\n  }\n\n  override get page() {\n    return AppItems.property;\n  }\n\n  override get tabsItems(): ToolboxTabsItem[] {\n    return [\n      {\n        icon: icons.childProperty,\n        label: \"Contents\",\n        slot: \"contents\",\n        count: this.contentsCount\n      },\n      {\n        icon: icons.checklist,\n        label: \"Usages\",\n        slot: \"usages\",\n        count: this.usagesCount\n      }\n    ];\n  }\n\n  static override apiRoute(params: APINamespaceParams | APIComponentParams) {\n    let route = Version.apiRoute(params);\n    if (\"qname\" in params) {\n      route += `/properties/${ params.qname }`;\n    }\n    else {\n      route += `/namespaces/${ params.prefix }/properties`;\n    }\n    return route;\n  }\n\n  static override badgeColor(category: APIPropertyCategory | undefined): ColorType {\n    if (category == \"attribute\") return \"warning\";\n    return category == \"abstract_element\" ? \"neutral\" : \"primary\";\n  }\n\n  static override badgeVariant(category: APIPropertyCategory | undefined): ColorVariantType {\n    let label = Property.badgeLabel(category);\n    return label == \"object\" ? \"solid\" : \"subtle\";\n  }\n\n  static override init() {\n    return new Property();\n  }\n\n  static badgeLabel(category: APIPropertyCategory | undefined, typeCategory?: APITypeCategory): PropertyBaseCategory | undefined {\n    switch (category) {\n      case \"abstract_element\": return \"abstract\";\n\n      case \"attribute\": return \"attribute\";\n\n      case \"element\":\n        if (!typeCategory) return undefined;\n\n        return typeCategory == \"complex_object\" ? \"object\" : \"value\";\n    }\n  }\n\n}\n","import type { BreadcrumbItem, TabsItem } from \"@nuxt/ui\";\r\nimport { Entity, type EntityTypeCode } from \"./Entity\";\r\nimport { Version } from \"./Version\";\r\nimport { Type } from \"./Type\";\r\nimport { Namespace } from \"./Namespace\";\r\nimport { Property } from \"./Property\";\r\n\r\nexport class ChildProperty extends Entity {\r\n\r\n  override \"@type\": EntityTypeCode = \"ChildProperty\";\r\n\r\n  type?: APITypeRef;\r\n  property?: APIPropertyRef;\r\n\r\n  min?: string;\r\n  max?: string;\r\n  sequence?: number;\r\n  definition?: string;\r\n\r\n  namespace?: APINamespaceRef;\r\n  version?: APIVersionRef;\r\n  model?: APIModelRef;\r\n  steward?: APIStewardRef;\r\n\r\n  contentsCount?: number;\r\n\r\n  override get badgeLabel() {\r\n    if (this.property?.category == \"attribute\") {\r\n      let usage = this.min == \"0\" ? \"optional\" : \"required\";\r\n      return `attribute | ${ usage }`\r\n    }\r\n    return `${ this.min || \"?\" } : ${ this.max || \"?\" }`\r\n  }\r\n\r\n  override get badgeColor(): ColorType {\r\n    return this.property?.category == \"attribute\" ? \"neutral\" : \"primary\";\r\n  }\r\n\r\n  override get badgeVariant(): ColorVariantType {\r\n    if (!this.min) return \"subtle\";\r\n    return this.min >= \"1\" ? \"solid\" : \"subtle\";\r\n  }\r\n\r\n  override get documentation() {\r\n    return this.definition;\r\n  }\r\n\r\n  override get icon() {\r\n    return icons.childProperty;\r\n  }\r\n\r\n  override get infoItems(): InfoItem[] {\r\n    let items: InfoItem[] = [];\r\n    let params = this.params;\r\n\r\n    let typeParams: APIComponentParams = {\r\n      ...params,\r\n      qname: this.type?.qname || \"\"\r\n    }\r\n    let propertyParams: APIComponentParams = {\r\n      ...params,\r\n      qname: this.property?.qname || \"\"\r\n    }\r\n\r\n    Entity.addInfoItem(items, \"Type\", this.type?.qname, \"route\", Type.toolboxRoute(typeParams));\r\n\r\n    Entity.addInfoItem(items, \"Property\", this.property?.qname, \"route\", Property.toolboxRoute(propertyParams));\r\n\r\n    Entity.addInfoItem(items, \"Property definition\", this.property?.definition);\r\n\r\n    Entity.addInfoItem(items, \"Property category\", Property.badgeLabel(this.property?.category, this.type?.category), undefined, undefined, Property.badgeColor(this.property?.category), Property.badgeVariant(this.property?.category));\r\n\r\n    Entity.addInfoItem(items, \"Min\", this.min);\r\n    Entity.addInfoItem(items, \"Max\", this.max);\r\n    Entity.addInfoItem(items, \"Definition\", this.definition);\r\n\r\n    return items;\r\n  }\r\n\r\n  override get label() {\r\n    return this.property?.qname || \"\";\r\n  }\r\n\r\n  override get page() {\r\n    return AppItems.childProperty;\r\n  }\r\n\r\n  override get params() {\r\n    return super.params as APIChildPropertyParams\r\n  }\r\n\r\n  override get tabsItems(): ToolboxTabsItem[] {\r\n    return [\r\n      {\r\n        icon: icons.childProperty,\r\n        label: \"Contents\",\r\n        slot: \"contents\",\r\n        count: this.contentsCount\r\n      }\r\n    ];\r\n  }\r\n\r\n  static override apiRoute(params: APIChildPropertyParams) {\r\n    let route = Version.apiRoute(params);\r\n\r\n    if (\"prefix\" in params) {\r\n      route += `/namespaces/${ params.prefix }/subproperties`;\r\n    }\r\n    else if (\"propertyQName\" in params && \"typeQName\" in params) {\r\n      route += `/types/${ params.typeQName}/subproperties/${ params.propertyQName }`;\r\n    }\r\n    else if (\"propertyQName\" in params) {\r\n      route += `/properties/${ params.propertyQName }/subproperties`;\r\n    }\r\n    else if (\"typeQName\" in params) {\r\n      route += `/types/${ params.typeQName }/subproperties`;\r\n    }\r\n\r\n    return route;\r\n  }\r\n\r\n  static override breadcrumbs(params: APIChildPropertyParams): BreadcrumbItem[] {\r\n    let breadcrumbs = Namespace.breadcrumbs({...params, prefix: \"tmp\"}).slice(0, -1);\r\n    breadcrumbs.push(...[\r\n      {\r\n        to: Type.toolboxRoute({...params, qname: params.typeQName || \"\"}),\r\n        label: params.typeQName\r\n      },\r\n      {\r\n        label: params.propertyQName\r\n      }\r\n    ])\r\n    return breadcrumbs;\r\n  }\r\n\r\n  static override id(typeID: string, propertyQName: string) {\r\n    return `${typeID}/${propertyQName}`;\r\n  }\r\n\r\n  static override init() {\r\n    return new ChildProperty();\r\n  }\r\n\r\n  static override params(childProperty: APIChildProperty | string): APIChildPropertyParams {\r\n    if (typeof childProperty == \"string\") {\r\n      let [stewardKey, modelKey, versionNumber, typeQName, propertyQName] = childProperty.split(\"/\");\r\n      return {\r\n        stewardKey, modelKey, versionNumber, typeQName, propertyQName\r\n      }\r\n    }\r\n    return {\r\n      stewardKey: childProperty.steward?.stewardKey || \"\",\r\n      modelKey: childProperty.model?.modelKey || \"\",\r\n      versionNumber: childProperty.version?.versionNumber || \"\",\r\n      typeQName: childProperty.type?.qname,\r\n      propertyQName: childProperty.property?.qname\r\n    }\r\n  }\r\n\r\n  static override sort(a: ChildProperty, b: ChildProperty): number {\r\n    if (!a.sequence || !b.sequence) return 0;\r\n    return a.sequence - b.sequence;\r\n  }\r\n\r\n  static override toolboxRoute(params: APIChildPropertyParams) {\r\n    if (\"typeQName\" in params && \"propertyQName\" in params) {\r\n      return Version.toolboxRoute(params)\r\n      + \"/\" + params.typeQName\r\n      + \"/\" + params.propertyQName;\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n}","import { ChildProperty } from \"./niem/ChildProperty\";\r\nimport { Model } from \"./niem/Model\";\r\nimport { Namespace } from \"./niem/Namespace\";\r\nimport { Property } from \"./niem/Property\";\r\nimport { Steward } from \"./niem/Steward\";\r\nimport { Type } from \"./niem/Type\";\r\nimport { Version } from \"./niem/Version\";\r\n\r\nexport class Data {\r\n\r\n  static async stewards() {\r\n    let response = await fetch(Steward.apiRoute());\r\n    if (response.ok) {\r\n      let apiStewards = await response.json() as APISteward[];\r\n      let stewards = apiStewards.map(apiSteward => Steward.fromAPI(new Steward(), apiSteward));\r\n      return stewards.sort(Steward.sort);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  static async steward(stewardParams: APIStewardParams) {\r\n    let response = await fetch(Steward.apiRoute(stewardParams));\r\n    if (response.ok) {\r\n      let apiSteward = await response.json() as APISteward;\r\n      return Steward.fromAPI(new Steward(), apiSteward);\r\n    }\r\n  }\r\n\r\n  static async models(params?: APIStewardParams) {\r\n    if (!params) {\r\n      params = { stewardKey: \"*\" };\r\n    }\r\n    let response = await fetch(Model.apiRoute(params));\r\n    if (response.ok) {\r\n      let apiModels = await response.json() as APIModel[];\r\n      let models = apiModels.map(apiModel => Model.fromAPI(new Model(), apiModel));\r\n      return models.sort(Model.sort);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  static async model(modelParams: APIModelParams) {\r\n    let response = await fetch(Model.apiRoute(modelParams));\r\n    if (response.ok) {\r\n      let apiModel = await response.json() as APIModel;\r\n      return Model.fromAPI(new Model(), apiModel);\r\n    }\r\n  }\r\n\r\n  static async versions(modelParams: APIModelParams) {\r\n    let response = await fetch(Version.apiRoute(modelParams));\r\n    if (response.ok) {\r\n      let apiVersions = await response.json() as APIVersion[];\r\n      let versions = apiVersions.map(apiVersion => Version.fromAPI(new Version(), apiVersion));\r\n      versions.forEach(version => version.category = Version.category(version));\r\n      return versions.sort(Version.sort);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  static async version(versionParams: APIVersionParams) {\r\n    let response = await fetch(Version.apiRoute(versionParams));\r\n    if (response.ok) {\r\n      let apiVersion = await response.json() as APIVersion;\r\n      let version = Version.fromAPI(new Version(), apiVersion);\r\n      version.category = Version.category(version);\r\n      return version;\r\n    }\r\n  }\r\n\r\n  static async namespaces(versionParams: APIVersionParams) {\r\n    let response = await fetch(Namespace.apiRoute(versionParams));\r\n    if (response.ok) {\r\n      let apiNamespaces = await response.json() as APINamespace[];\r\n      let namespaces = apiNamespaces.map(apiNamespace => Namespace.fromAPI(new Namespace(), apiNamespace));\r\n      return namespaces.sort(Namespace.sort);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  static async namespace(namespaceParams: APINamespaceParams) {\r\n    let response = await fetch(Namespace.apiRoute(namespaceParams));\r\n    if (response.ok) {\r\n      let apiNamespace = await response.json() as APINamespace;\r\n      return Namespace.fromAPI(new Namespace(), apiNamespace);\r\n    }\r\n  }\r\n\r\n  static async properties(params: APINamespaceParams) {\r\n    let response = await fetch(Property.apiRoute(params));\r\n    if (response.ok) {\r\n      let apiProperties = await response.json() as APIProperty[];\r\n      let properties = apiProperties.map(apiProperty => Property.fromAPI(new Property(), apiProperty));\r\n      return properties.sort(Property.sort);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  static async property(args: APIComponentParams | string) {\r\n    let route = typeof args == \"string\" ? args : Property.apiRoute(args);\r\n    let response = await fetch(route);\r\n    if (response.ok) {\r\n      let apiProperty = await response.json() as APIProperty;\r\n      return Property.fromAPI(new Property(), apiProperty);\r\n    }\r\n  }\r\n\r\n  static async types(namespaceParams: APINamespaceParams) {\r\n    let response = await fetch(Type.apiRoute(namespaceParams));\r\n    if (response.ok) {\r\n      let apiTypes = await response.json() as APIType[];\r\n      let types = apiTypes.map(apiType => Type.fromAPI(new Type(), apiType));\r\n      return types.sort(Type.sort);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  static async type(args: APIComponentParams | string) {\r\n    let route = typeof args == \"string\" ? args : Type.apiRoute(args);\r\n    let response = await fetch(route);\r\n    if (response.ok) {\r\n      let apiType = await response.json() as APIType;\r\n      return Type.fromAPI(new Type(), apiType);\r\n    }\r\n  }\r\n\r\n  static async childPropertiesOfType(typeParams: APIComponentParams) {\r\n\r\n    let params: APIChildPropertyParams = {\r\n      ...typeParams,\r\n      typeQName: typeParams.qname\r\n    }\r\n\r\n    let response = await fetch(ChildProperty.apiRoute(params));\r\n    if (response.ok) {\r\n      let apiChildProperties = await response.json() as APIChildProperty[];\r\n      let childProperties = apiChildProperties.map(apiChildProperty => ChildProperty.fromAPI(new ChildProperty(), apiChildProperty));\r\n      return childProperties.sort(ChildProperty.sort);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  static async childPropertiesWithProperty(propertyParams: APIComponentParams) {\r\n    let params: APIChildPropertyParams = {\r\n      ...propertyParams,\r\n      propertyQName: propertyParams.qname\r\n    }\r\n\r\n    let response = await fetch(ChildProperty.apiRoute(params));\r\n    if (response.ok) {\r\n      let apiChildProperties = await response.json() as APIChildProperty[];\r\n      let childProperties = apiChildProperties.map(apiChildProperty => ChildProperty.fromAPI(new ChildProperty(), apiChildProperty));\r\n      return childProperties;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  static async childProperty(childPropertyParams: APIChildPropertyParams) {\r\n    let response = await fetch(ChildProperty.apiRoute(childPropertyParams));\r\n    if (response.ok) {\r\n      let apiChildProperty = await response.json() as APIChildProperty;\r\n      return ChildProperty.fromAPI(new ChildProperty(), apiChildProperty);\r\n    }\r\n  }\r\n\r\n}","import { Property } from \"./niem/Property\";\r\nimport { Type } from \"./niem/Type\";\r\n\r\nexport type SearchPropertiesOptions = {\r\n  niemVersionNumber?: string,\r\n  token?: string[],\r\n  substring?: string[],\r\n  prefix?: string[],\r\n  type?: string[],\r\n  isAbstract?: boolean,\r\n  isElement?: boolean,\r\n  offset?: number,\r\n  limit?: number\r\n}\r\n\r\nexport type SearchTypesOptions = {\r\n  niemVersionNumber?: string,\r\n  token?: string[],\r\n  substring?: string[],\r\n  prefix?: string[],\r\n  offset?: number,\r\n  limit?: number\r\n}\r\n\r\n// TODO-API: Limit searches to specific stewards, models, and versions\r\n\r\nexport class Search {\r\n\r\n  static async properties(options: SearchPropertiesOptions) {\r\n    let queryString = Search.optionsQueryString(options);\r\n    if (queryString == \"\") return [];\r\n\r\n    let response = await fetch(API.routes.search_properties + queryString);\r\n\r\n    if (response.ok) {\r\n      let apiProperties = await response.json() as APIProperty[];\r\n      let properties = apiProperties.map(apiProperty => Property.fromAPI(new Property(), apiProperty));\r\n      return properties;\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  static async types(options: SearchTypesOptions) {\r\n    let queryString = Search.optionsQueryString(options);\r\n    if (queryString == \"\") return [];\r\n\r\n    let response = await fetch(API.routes.search_types + queryString);\r\n\r\n    if (response.ok) {\r\n      let apiTypes = await response.json() as APIType[];\r\n      let types = apiTypes.map(apiType => Type.fromAPI(new Type(), apiType));\r\n      return types;\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  private static optionsQueryString(options: {[x: string] : string | boolean | number | string[]}) {\r\n    let queryString = \"\";\r\n    for (let [key, value] of Object.entries(options)) {\r\n      if (queryString != \"\") queryString += \"&\";\r\n      queryString += key + \"=\";\r\n      queryString += Array.isArray(value) ? value.join(\",\") : value;\r\n    }\r\n    if (queryString != \"\") queryString = \"?\" + queryString;\r\n    return queryString;\r\n  }\r\n\r\n}","import { useStorage, type UseStorageOptions } from \"@vueuse/core\";\nimport type { RemovableRef } from \"@vueuse/core/index.cjs\";\nimport { Model } from \"~/utils/niem/Model\";\nimport { Namespace } from \"~/utils/niem/Namespace\";\nimport { Property } from \"~/utils/niem/Property\";\nimport { Steward } from \"~/utils/niem/Steward\";\nimport { Type } from \"~/utils/niem/Type\";\nimport { Version } from \"~/utils/niem/Version\";\nimport { Config } from \"~/utils/Config\";\nimport type { Entity } from \"~/utils/niem/Entity\";\nimport { ChildProperty } from \"~/utils/niem/ChildProperty\";\n\n/**\n * Prefix keys in local storage with \"niem-toolbox-\".\n */\nfunction key(id: string) {\n  return \"niem-toolbox-\" + id;\n}\n\nconst storageOptions: UseStorageOptions<any> = {\n  mergeDefaults: true\n}\n\n// Set stewards for default initialization and $reset\nconst user = new Steward(\"User\", \"Username\", \"Person\");\n\n// Set models for default initialization and $reset\n// TODO-API: Move highlights subset model to database\nconst sandboxModelObject = new Model(user, \"Sandbox Model\", \"message\");\nconst favoritesModelObject = new Model(user, \"Favorites\", \"other\");\nconst highlightsModelObject = new Model(user, \"Highlights\", \"other\");\n\nconst sandboxVersion = new Version(sandboxModelObject, \"1.0\", \"5.2\");\nconst favoritesVersion = new Version(favoritesModelObject, \"5.2\", \"5.2\");\nconst highlightsVersion = new Version(highlightsModelObject, \"5.2\", \"5.2\");\n\n// TODO: Cannot call top-level await.  Convert to async function\n// const niemModelObject = await Data.model(Model.NIEMModelParams);\n// const niemVersionObjects = await Data.versions(Model.NIEMModelParams);\n\nexport const useToolboxStore = defineStore(\"niem-toolbox\", () => {\n\n  const config: RemovableRef<typeof Config> = useStorage(key(\"config\"), { ...Config }, localStorage, storageOptions);\n\n  // Session storage for entities that can change or be added to over time\n\n  const stewardStorage: RemovableRef<Steward[]> = useStorage(key(\"stewards\"), [] as Steward[], sessionStorage, { ...storageOptions, serializer: Steward.serializeEntityList(Steward.init) });\n\n  const modelStorage: RemovableRef<Model[]> = useStorage(key(\"models\"), [] as Model[], sessionStorage, {...storageOptions, serializer: Model.serializeEntityList(Model.init)});\n\n  const versionStorage: RemovableRef<Version[]> = useStorage(key(\"versions\"), [sandboxVersion, favoritesVersion, highlightsVersion], sessionStorage, {...storageOptions, serializer: Version.serializeEntityList(Version.init)});\n\n  // TODO: Depends on top-level await.\n  // const niemModel: RemovableRef<Model> = useStorage(key(\"niem-model\"), niemModelObject, sessionStorage, storageOptions);\n\n  // const niemVersions: RemovableRef<Version[]> = useStorage(key(\"niem-versions\"), niemVersionObjects, sessionStorage, storageOptions);\n\n\n  // Local storage for published entities that do not change\n\n  const namespaceStorage: RemovableRef<Namespace[]> = useStorage(key(\"namespaces\"), [], localStorage, {...storageOptions, serializer: Namespace.serializeEntityList(Namespace.init)});\n\n  const propertyStorage: RemovableRef<Property[]> = useStorage(key(\"properties\"), [], localStorage, {...storageOptions, serializer: Property.serializeEntityList(Property.init)});\n\n  const typeStorage: RemovableRef<Type[]> = useStorage(key(\"types\"), [], localStorage, {...storageOptions, serializer: Type.serializeEntityList(Type.init)});\n\n  const childPropertyStorage: RemovableRef<ChildProperty[]> = useStorage(key(\"child-properties\"), [], localStorage, {...storageOptions, serializer: ChildProperty.serializeEntityList(ChildProperty.init)});\n\n\n  const userSteward: RemovableRef<Steward> = useStorage(key(\"user\"), user, localStorage, storageOptions);\n\n  const favorites: RemovableRef<Model> = useStorage(key(\"favorites\"), favoritesModelObject, localStorage, {...storageOptions, serializer: Model.serializer});\n\n  const highlights: RemovableRef<Model> = useStorage(key(\"highlights\"), highlightsModelObject, localStorage, storageOptions);\n\n  const sandbox: RemovableRef<Model> = useStorage(key(\"sandbox\"), sandboxModelObject, localStorage, storageOptions);\n\n  const propertyHistory: RemovableRef<Property[]> = useStorage(key(\"history\"), [], localStorage, storageOptions);\n\n  const routeHistory: RemovableRef<string> = useStorage(key(\"routes\"), [], localStorage, storageOptions);\n\n\n  //\n  // Actions\n  //\n\n  function resetSessionStorage() {\n    stewardStorage.value = [];\n    modelStorage.value = [];\n    versionStorage.value = [];\n  }\n\n  function resetLocalStorage() {\n    config.value = { ...Config };\n\n    namespaceStorage.value = [];\n    propertyStorage.value = [];\n    typeStorage.value = [];\n  }\n\n  function $reset() {\n    resetSessionStorage();\n    resetLocalStorage();\n  }\n\n  /**\n   * Get stewards from session storage, or load from the API.\n   */\n  async function stewards(): Promise<Steward[]> {\n    if (stewardStorage.value.length == 0) {\n      stewardStorage.value = await Data.stewards();\n    }\n    else {\n      processHits(stewardStorage.value);\n    }\n    return stewardStorage.value;\n  }\n\n  async function models(steward?: Steward): Promise<Model[]> {\n    if (steward && steward.modelsLoaded) {\n      // Get all models from given steward in storage\n      return modelStorage.value.filter(model => model.steward?.route == steward.route);\n    }\n    else if (steward) {\n      // Get all models from given steward from API\n      return await Data.models(steward.params);\n    }\n    else if (modelStorage.value.length > 0) {\n      // All models have already been loaded into storage\n      processHits(modelStorage.value);\n      return modelStorage.value;\n    }\n    else {\n      // Get all models from API\n      modelStorage.value = await Data.models();\n\n      // Mark steward models as loaded\n      for (let steward of stewardStorage.value) {\n        steward.modelsLoaded = true;\n      }\n      return modelStorage.value;\n    }\n  }\n\n  async function versions(model: Model): Promise<Version[]> {\n    if (model.versionsLoaded) {\n      let results = versionStorage.value.filter(version => version.model?.route == model.apiRoute);\n      processHits(results);\n      return results;\n    }\n\n    let results = await Data.versions(model.params);\n    versionStorage.value.push(...results);\n    model.versionsLoaded = true;\n    return results;\n  }\n\n  async function namespaces(version: Version): Promise<Namespace[]> {\n    if (version.namespacesLoaded) {\n      let results = namespaceStorage.value.filter(namespace => namespace.version?.route == version.route);\n      processHits(results);\n      return results;\n    }\n\n    let results = await Data.namespaces(version.params);\n    // namespaceStorage.value.push(...results);\n    // version.namespacesLoaded = true;\n    return results;\n  }\n\n  async function propertiesFromVersion(version: Version, offset=0): Promise<Property[]> {\n    if (version.propertiesLoaded) {\n      let results = propertyStorage.value.filter(property => property.version?.route == version.route);\n      processHits(results);\n      return results;\n    }\n\n    let options: SearchPropertiesOptions = {\n      niemVersionNumber: version.niemVersionNumber,\n      offset\n    }\n\n    let results = await Search.properties(options);\n    // propertyStorage.value.push(...results);\n\n    // if (results.length < API.PAGINATION_LIMIT) {\n    //   version.propertiesLoaded = true;\n\n    //   // Cascade loaded boolean to namespaces in version\n    //   let namespaces = namespaceStorage.value.filter(namespace => namespace.version?.route == version.route);\n    //   for (let namespace of namespaces) {\n    //     namespace.propertiesLoaded = true;\n    //   }\n    // }\n    return results;\n  }\n\n  async function propertiesFromNamespace(namespace: Namespace, offset=0): Promise<Property[]> {\n    if (namespace.propertiesLoaded) {\n      let results = propertyStorage.value.filter(property => property.namespace?.route == namespace.route);\n      processHits(results);\n      return results;\n    }\n\n    if (!namespace.prefix) return [];\n\n    let namespaceVersion = await version(namespace.params);\n    let options: SearchPropertiesOptions = {\n      niemVersionNumber: namespaceVersion?.niemVersionNumber,\n      prefix: [namespace.prefix],\n      offset\n    }\n\n    let results = await Search.properties(options);\n    // propertyStorage.value.push(...results);\n    // namespace.propertiesLoaded = true;\n    return results;\n  }\n\n  async function typesFromVersion(version: Version, offset=0): Promise<Type[]> {\n    if (version.typesLoaded) {\n      let results = typeStorage.value.filter(type => type.version?.route == version.route);\n      processHits(results);\n      return results;\n    }\n\n    let options: SearchTypesOptions = {\n      niemVersionNumber: version.niemVersionNumber,\n      offset\n    }\n\n    let results = await Search.types(options);\n    // typeStorage.value.push(...results);\n\n    // if (results.length < API.PAGINATION_LIMIT) {\n    //   version.typesLoaded = true;\n\n    //   // Cascade loaded boolean to namespaces in version\n    //   let namespaces = namespaceStorage.value.filter(namespace => namespace.version?.route == version.route);\n    //   for (let namespace of namespaces) {\n    //     namespace.typesLoaded = true;\n    //   }\n    // }\n    return results;\n  }\n\n  async function typesFromNamespace(namespace: Namespace, offset=0): Promise<Type[]> {\n    if (namespace.typesLoaded) {\n      let results = typeStorage.value.filter(type => type.namespace?.route == namespace.route);\n      processHits(results);\n      return results;\n    }\n\n    if (!namespace.prefix) return [];\n\n    let namespaceVersion = await version(namespace.params);\n    let options: SearchTypesOptions = {\n      niemVersionNumber: namespaceVersion?.niemVersionNumber,\n      prefix: [namespace.prefix],\n      offset\n    }\n\n    let results = await Search.types(options);\n    // typeStorage.value.push(...results);\n    // namespace.typesLoaded = true;\n    return results;\n  }\n\n  async function childPropertiesOfType(type: Type): Promise<ChildProperty[]> {\n    if (type.contentsLoaded) {\n      let results = childPropertyStorage.value.filter(childProperty => childProperty.type?.route == type.route);\n      processHits(results);\n      return results.sort(ChildProperty.sort);\n    }\n\n    console.log(\"PULLING CHILD PROPERTIES OF \", type.qname);\n    let results = await Data.childPropertiesOfType(type.params);\n    childPropertyStorage.value.push(...results);\n    type.contentsLoaded = true;\n    return results || [];\n  }\n\n  async function childPropertiesWithProperty(property: Property): Promise<ChildProperty[]> {\n    let results = await Data.childPropertiesWithProperty(property.params);\n    return results || [];\n  }\n\n\n  /**\n   * Get steward from session storage or from the API.\n   */\n  async function steward(params: APIStewardParams): Promise<Steward|void> {\n    // Attempt to load from store\n    let result = stewardStorage.value.find(steward => steward.stewardKey == params.stewardKey);\n    processHit(result);\n\n    if (!result) {\n      // Attempt to pull from API\n      result = await Data.steward(params);\n    }\n\n    return result;\n  }\n\n  async function model(params: APIModelParams): Promise<Model|undefined> {\n    // Attempt to load from store\n    let modelID = Model.idFromParams(Model, params);\n    let result = modelStorage.value.find(model => model.id == modelID);\n    processHit(result);\n\n    if (!result) {\n      // Attempt to load from API\n      result = await Data.model(params);\n    }\n\n    return result;\n  }\n\n  async function version(params: APIVersionParams): Promise<Version|undefined> {\n    // Attempt to load from store\n    let versionID = Version.idFromParams(Version, params);\n    let result = versionStorage.value.find(version => version.id == versionID);\n    processHit(result);\n\n    if (!result) {\n      result = await Data.version(params);\n    }\n\n    return result;\n  }\n\n  async function namespace(params: APINamespaceParams): Promise<Namespace|undefined> {\n    // Attempt to load from store\n    let namespaceID = Namespace.idFromParams(Namespace, params);\n    let result = namespaceStorage.value.find(namespace => namespace.id == namespaceID);\n    processHit(result);\n\n    if (!result) {\n      result = await Data.namespace(params);\n      if (result) namespaceStorage.value.push(result);\n    }\n\n    return result;\n  }\n\n  async function property(arg: APIComponentParams | string): Promise<Property|undefined> {\n    let result: Property | undefined;\n\n    if (typeof arg == \"object\") {\n      // Attempt to load from store\n      let propertyID = Property.idFromParams(Property, arg);\n      result = propertyStorage.value.find(property => property.id == propertyID);\n      processHit(result);\n    }\n\n    if (!result) {\n      result = await Data.property(arg);\n      if (result) propertyStorage.value.push(result);\n    }\n\n    return result;\n  }\n\n  async function type(arg: APIComponentParams | string): Promise<Type|undefined> {\n    let result: Type | undefined;\n\n    if (typeof arg == \"object\") {\n      // Attempt to load from store\n      let typeID = Type.idFromParams(Type, arg);\n      result = typeStorage.value.find(type => type.id == typeID);\n      processHit(result);\n    }\n\n    if (!result) {\n      result = await Data.type(arg);\n      if (result) typeStorage.value.push(result);\n    }\n\n    return result;\n  }\n\n  async function bases(type: Type): Promise<Type[]> {\n    let bases: Type[] = [];\n    let currentType: Type | undefined = type;\n\n    while (currentType && currentType.base) {\n      let base = await Data.type(currentType.base.route);\n      if (base) bases.push(base);\n      currentType = base;\n    }\n\n    return bases;\n  }\n\n  async function augmentations(type: Type): Promise<Property[]> {\n    if (!type.name || !type.name.endsWith(\"Type\") || type.category != \"complex_object\") return [];\n\n    let augmentationName = type.name.slice(0, -4) + \"Augmentation\";\n\n    let augmentations = await Search.properties({\n      niemVersionNumber: type.version?.niemVersionNumber,\n      type: [ augmentationName + \"Type\" ]\n    })\n\n    // TODO-API: Search augmentations returns too many results\n    return augmentations.filter(augmentation => augmentation.name == augmentationName);\n  }\n\n\n  // TODO: Depends on top-level await.\n  // const niemVersion = computed<Version>(() => {\n  //   return niemVersions.value.find(version => version.versionNumber == config.value.selectedNIEMVersionNumber) as Version;\n  // });\n\n\n\n  return {\n    config,\n\n    resetLocalStorage,\n    resetSessionStorage,\n    $reset,\n\n    stewards,\n    steward,\n\n    models,\n    model,\n\n    versions,\n    version,\n\n    namespaces,\n    namespace,\n\n    propertiesFromVersion,\n    propertiesFromNamespace,\n    property,\n\n    typesFromVersion,\n    typesFromNamespace,\n    type,\n\n    childPropertiesOfType,\n    childPropertiesWithProperty,\n\n    bases,\n    augmentations,\n\n    userSteward,\n    highlights,\n    favorites,\n    sandbox,\n    propertyHistory,\n    routeHistory,\n\n    // TODO: Depends on top-level await.\n    // niemModel,\n    // niemVersions,\n    // niemVersion\n\n  }\n\n});\n\nif (import.meta.hot) {\n  import.meta.hot.accept(acceptHMRUpdate(useToolboxStore, import.meta.hot));\n}\n\nfunction processHit<T extends Entity>(entity: T | undefined) {\n  if (entity) entity.hits++;\n  return entity;\n}\n\nfunction processHits<T extends Entity>(entities: T[] | undefined) {\n  if (entities) {\n    entities.forEach(entity => entity.hits++);\n  }\n  return entities;\n}\n\nfunction processResponse(storeEntities: RemovableRef<Entity[]>, entity: Entity | undefined) {\n  if (entity) {\n    storeEntities.value.push(entity);\n  }\n}\n\nfunction processResponses(storeEntities: RemovableRef<Entity[]>, entities: Entity[] | undefined) {\n  if (entities) {\n    storeEntities.value.push(...entities);\n  }\n}\n\n"],"names":["ENTRY_FOCUS","EVENT_OPTIONS","MAP_KEY_TO_FOCUS_INTENT","getDirectionAwareKey","key","dir","getFocusIntent","event","orientation","focusFirst","candidates","preventScroll","rootNode","PREVIOUSLY_FOCUSED_ELEMENT","candidate","wrapArray","array","startIndex","_","index","injectRovingFocusGroupContext","provideRovingFocusGroupContext","createContext","_sfc_main","defineComponent","__props","__expose","__emit","props","emits","loop","propDir","toRefs","useDirection","currentTabStopId","useVModel","isTabbingBackOut","ref","isClickFocus","focusableItemsCount","getItems","CollectionSlot","useCollection","handleFocus","isKeyboardFocus","entryFocusEvent","items","i","activeItem","item","currentItem","candidateItems","handleMouseUp","tabStopId","_ctx","_cache","openBlock","createBlock","unref","withCtx","createVNode","Primitive","$event","renderSlot","context","id","computed","useId","isCurrentTabStop","CollectionItem","primitiveElement","currentElement","usePrimitiveElement","_a","onMounted","onUnmounted","handleKeydown","focusIntent","candidateNodes","currentIndex","nextTick","Entity","__publicField","infoItems","field","value","format","link","badgeColor","badgeVariant","arg","entity","apiData","params","args","EntityClass","apiEntity","initializer","raw","object","a","b","_Steward","shortName","fullName","category","label","icons","unit","AppItems","route","Config","stewardKey","steward","Steward","_Model","breadcrumbs","stewardID","modelKey","model","_b","Model","Version","versionNumber","niemVersionNumber","separator","ToolboxApp","modelID","version","_c","_Namespace","versionID","prefix","namespace","Namespace","Component","qname","component","Type","trailingItems","baseParams","_Property","typeParams","typeCategory","Property","ChildProperty","propertyParams","_d","_e","_f","_g","_h","_i","typeID","propertyQName","childProperty","typeQName","Data","response","apiSteward","stewardParams","apiModel","modelParams","versions","apiVersion","versionParams","apiNamespace","namespaceParams","apiProperty","apiType","apiChildProperty","childPropertyParams","Search","options","queryString","API","storageOptions","user","sandboxModelObject","favoritesModelObject","highlightsModelObject","sandboxVersion","favoritesVersion","highlightsVersion","useToolboxStore","defineStore","config","useStorage","stewardStorage","modelStorage","versionStorage","namespaceStorage","propertyStorage","typeStorage","childPropertyStorage","userSteward","favorites","highlights","sandbox","propertyHistory","routeHistory","resetSessionStorage","resetLocalStorage","$reset","stewards","processHits","models","results","namespaces","propertiesFromVersion","offset","property","propertiesFromNamespace","namespaceVersion","typesFromVersion","type","typesFromNamespace","childPropertiesOfType","childPropertiesWithProperty","result","processHit","namespaceID","propertyID","bases","currentType","base","bases2","augmentations","augmentationName","augmentation","entities"],"mappings":"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","x_google_ignoreList":[0,1,2]}